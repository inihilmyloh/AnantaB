package com.ananta.form;

import com.ananta.database.Database;
import java.awt.Dimension;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author M.Khoiril
 */
public class FormPengeluaranMigrasi extends javax.swing.JPanel {
    
    private Connection conn;
    private int idUserTerpilih = -1;
    private String idPengeluaranYangSedangDiedit = null;
    private boolean sedangEditPengeluaran = false;
    
    public FormPengeluaranMigrasi() {
        initComponents();
        conn = Database.getConnection();

        isiNamaKasir();
        setKategoriPengeluaran();
        setupPanelAwal(); // ini bisa kamu gabungkan dengan initFormPengeluaran() jika relevan
        setupListener();
        loadBarangKeComboBox();
        setupListenerComboBoxBarang();

        setModelTabelPengeluaran(); 
        aturLebarKolomPengeluaran(); 
        getDataPengeluaran((DefaultTableModel) tbl_Daftar_Pengeluaran.getModel());
        setModelTabelDetailRestock();
        getDataDetailRestock((DefaultTableModel) tbl_Daftar_Detail.getModel());
        setIdPengeluaranOtomatis();

        setNilaiAwalTotalHarga();
        setNilaiAwalTotalBiaya();
        periksaStatusFormPengeluaran();
        periksaStatusFormDetail(true);

        sembunyikanTombolEditBatalHapus();

        // Inisialisasi layout & tampilan
        initFormPengeluaran();
        
        sembunyikanTombolEditBatalHapus();
        SwingUtilities.invokeLater(() -> {
            aturTampilanDaftarDetail(false);
        });
    }
    
    
    
    private void setNilaiAwalTotalHarga() {
        fieldTotalHarga.setText("Rp0");
    }

    private void setNilaiAwalTotalBiaya() {
        fieldTotalBiaya.setText("Rp0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        shapecustom2 = new com.ananta.shape.shapecustom();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        shapecustom5 = new com.ananta.shape.shapecustom();
        jTextField4 = new javax.swing.JTextField();
        shapecustom4 = new com.ananta.shape.shapecustom();
        jTextField3 = new javax.swing.JTextField();
        shapecustom3 = new com.ananta.shape.shapecustom();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateChooser1 = new com.raven.datechooser.DateChooser();
        pn_hitam_FPengeluaran = new com.ananta.shape.shapecustom();
        pn_abu_FPengeluaran = new com.ananta.shape.shapecustom();
        IdPengeluaram = new javax.swing.JLabel();
        shapecustom7 = new com.ananta.shape.shapecustom();
        fieldIdPengeluaran = new javax.swing.JTextField();
        NamaKasir = new javax.swing.JLabel();
        shapecustom16 = new com.ananta.shape.shapecustom();
        fieldNamaKasir = new javax.swing.JTextField();
        label_Pengeluaran = new javax.swing.JLabel();
        btn_simpan_FPengeluaran = new com.ananta.shape.CustomButton();
        JenisPengeluaran = new javax.swing.JLabel();
        shapecustom14 = new com.ananta.shape.shapecustom();
        cbbx_pilihKategori = new com.ananta.shape.CustomComboBox();
        TotalHarga = new javax.swing.JLabel();
        shapecustom9 = new com.ananta.shape.shapecustom();
        fieldTotalHarga = new javax.swing.JTextField();
        btn_batal_FPengeluaran = new com.ananta.shape.CustomButton();
        pn_hitam_DPengeluaran = new com.ananta.shape.shapecustom();
        pn_abu_DPengeluaran = new com.ananta.shape.shapecustom();
        label_DaftarPengeluaran = new javax.swing.JLabel();
        jScrollPanePengeluaran = new javax.swing.JScrollPane();
        tbl_Daftar_Pengeluaran = new com.ananta.shape.JTabeel();
        btn_edit = new com.ananta.shape.CustomButton();
        btn_batal_DPengeluaran = new com.ananta.shape.CustomButton();
        btn_hapus = new com.ananta.shape.CustomButton();
        btn_lihatDetail = new com.ananta.shape.CustomButton();
        panel_cari_png = new com.ananta.shape.shapecustom();
        field_cari_DPengeluaran = new javax.swing.JTextField();
        icon_searchDPengeluaran = new javax.swing.JLabel();
        pn_hitam_FDetail = new com.ananta.shape.shapecustom();
        pn_abu_FDetail = new com.ananta.shape.shapecustom();
        label_Detailrestock = new javax.swing.JLabel();
        PilihBarang = new javax.swing.JLabel();
        shapecustom10 = new com.ananta.shape.shapecustom();
        cbbx_pilihBarang = new com.ananta.shape.CustomComboBox();
        shapecustom11 = new com.ananta.shape.shapecustom();
        fieldIdBarang = new javax.swing.JTextField();
        IdBarang = new javax.swing.JLabel();
        btn_simpan_FDetail = new com.ananta.shape.CustomButton();
        Barcode = new javax.swing.JLabel();
        shapecustom12 = new com.ananta.shape.shapecustom();
        fieldBarcode = new javax.swing.JTextField();
        shapecustom13 = new com.ananta.shape.shapecustom();
        fieldJumlahBeli = new javax.swing.JTextField();
        JumlahBeli = new javax.swing.JLabel();
        shapecustom15 = new com.ananta.shape.shapecustom();
        fieldTotalBiaya = new javax.swing.JTextField();
        TotalBiaya = new javax.swing.JLabel();
        btn_batal_FDetail = new com.ananta.shape.CustomButton();
        pn_hitam_DDetail = new com.ananta.shape.shapecustom();
        pn_abu_DDetail = new com.ananta.shape.shapecustom();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_Daftar_Detail = new com.ananta.shape.JTabeel();
        label_Detailrestock2 = new javax.swing.JLabel();
        pn_cari_dtl = new com.ananta.shape.shapecustom();
        field_cari_DDetail = new javax.swing.JTextField();
        icon_searchDDetail = new javax.swing.JLabel();
        btn_tutupDetail = new com.ananta.shape.CustomButton();

        shapecustom2.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom2.setRoundBottomLeft(20);
        shapecustom2.setRoundBottomRight(20);
        shapecustom2.setRoundTopLeft(20);
        shapecustom2.setRoundTopRight(20);

        jTextField1.setBackground(new java.awt.Color(255, 253, 253));
        jTextField1.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom2Layout = new javax.swing.GroupLayout(shapecustom2);
        shapecustom2.setLayout(shapecustom2Layout);
        shapecustom2Layout.setHorizontalGroup(
            shapecustom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1)
                .addContainerGap())
        );
        shapecustom2Layout.setVerticalGroup(
            shapecustom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1)
                .addContainerGap())
        );

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(1, 0, 0));
        jLabel6.setText("ID Pengeluaran");

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(1, 0, 0));
        jLabel5.setText("Keterangan");

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(1, 0, 0));
        jLabel3.setText("Kategori");

        shapecustom5.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom5.setRoundBottomLeft(20);
        shapecustom5.setRoundBottomRight(20);
        shapecustom5.setRoundTopLeft(20);
        shapecustom5.setRoundTopRight(20);

        jTextField4.setBackground(new java.awt.Color(255, 253, 253));
        jTextField4.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        jTextField4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom5Layout = new javax.swing.GroupLayout(shapecustom5);
        shapecustom5.setLayout(shapecustom5Layout);
        shapecustom5Layout.setHorizontalGroup(
            shapecustom5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom5Layout.setVerticalGroup(
            shapecustom5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField4)
                .addContainerGap())
        );

        shapecustom4.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom4.setRoundBottomLeft(20);
        shapecustom4.setRoundBottomRight(20);
        shapecustom4.setRoundTopLeft(20);
        shapecustom4.setRoundTopRight(20);

        jTextField3.setBackground(new java.awt.Color(255, 253, 253));
        jTextField3.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom4Layout = new javax.swing.GroupLayout(shapecustom4);
        shapecustom4.setLayout(shapecustom4Layout);
        shapecustom4Layout.setHorizontalGroup(
            shapecustom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField3)
                .addContainerGap())
        );
        shapecustom4Layout.setVerticalGroup(
            shapecustom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField3)
                .addContainerGap())
        );

        shapecustom3.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom3.setRoundBottomLeft(20);
        shapecustom3.setRoundBottomRight(20);
        shapecustom3.setRoundTopLeft(20);
        shapecustom3.setRoundTopRight(20);

        jTextField2.setBackground(new java.awt.Color(255, 253, 253));
        jTextField2.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        jTextField2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom3Layout = new javax.swing.GroupLayout(shapecustom3);
        shapecustom3.setLayout(shapecustom3Layout);
        shapecustom3Layout.setHorizontalGroup(
            shapecustom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2)
                .addContainerGap())
        );
        shapecustom3Layout.setVerticalGroup(
            shapecustom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(1, 0, 0));
        jLabel2.setText("Menu Pengeluaran");

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(1, 0, 0));
        jLabel4.setText("Nominal");

        pn_hitam_FPengeluaran.setBackground(new java.awt.Color(1, 0, 0));
        pn_hitam_FPengeluaran.setRoundBottomLeft(60);
        pn_hitam_FPengeluaran.setRoundBottomRight(60);
        pn_hitam_FPengeluaran.setRoundTopLeft(60);
        pn_hitam_FPengeluaran.setRoundTopRight(60);

        pn_abu_FPengeluaran.setBackground(new java.awt.Color(204, 204, 204));
        pn_abu_FPengeluaran.setRoundBottomLeft(60);
        pn_abu_FPengeluaran.setRoundBottomRight(60);
        pn_abu_FPengeluaran.setRoundTopLeft(60);
        pn_abu_FPengeluaran.setRoundTopRight(60);

        IdPengeluaram.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        IdPengeluaram.setForeground(new java.awt.Color(1, 0, 0));
        IdPengeluaram.setText("ID Pengeluaran");

        shapecustom7.setBackground(new java.awt.Color(235, 235, 235));
        shapecustom7.setRoundBottomLeft(20);
        shapecustom7.setRoundBottomRight(20);
        shapecustom7.setRoundTopLeft(20);
        shapecustom7.setRoundTopRight(20);

        fieldIdPengeluaran.setBackground(new java.awt.Color(235, 235, 235));
        fieldIdPengeluaran.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        fieldIdPengeluaran.setForeground(new java.awt.Color(1, 0, 0));
        fieldIdPengeluaran.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fieldIdPengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldIdPengeluaranActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom7Layout = new javax.swing.GroupLayout(shapecustom7);
        shapecustom7.setLayout(shapecustom7Layout);
        shapecustom7Layout.setHorizontalGroup(
            shapecustom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldIdPengeluaran)
                .addContainerGap())
        );
        shapecustom7Layout.setVerticalGroup(
            shapecustom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldIdPengeluaran)
                .addContainerGap())
        );

        NamaKasir.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        NamaKasir.setForeground(new java.awt.Color(1, 0, 0));
        NamaKasir.setText("Nama Kasir");

        shapecustom16.setBackground(new java.awt.Color(235, 235, 235));
        shapecustom16.setRoundBottomLeft(20);
        shapecustom16.setRoundBottomRight(20);
        shapecustom16.setRoundTopLeft(20);
        shapecustom16.setRoundTopRight(20);

        fieldNamaKasir.setBackground(new java.awt.Color(235, 235, 235));
        fieldNamaKasir.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        fieldNamaKasir.setForeground(new java.awt.Color(1, 0, 0));
        fieldNamaKasir.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fieldNamaKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNamaKasirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom16Layout = new javax.swing.GroupLayout(shapecustom16);
        shapecustom16.setLayout(shapecustom16Layout);
        shapecustom16Layout.setHorizontalGroup(
            shapecustom16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldNamaKasir)
                .addContainerGap())
        );
        shapecustom16Layout.setVerticalGroup(
            shapecustom16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldNamaKasir, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        label_Pengeluaran.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        label_Pengeluaran.setForeground(new java.awt.Color(1, 0, 0));
        label_Pengeluaran.setText("Form Pengeluaran");

        btn_simpan_FPengeluaran.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/icon/icon_simpan.png"))); // NOI18N
        btn_simpan_FPengeluaran.setText("Simpan");
        btn_simpan_FPengeluaran.setDefaultColor(new java.awt.Color(51, 204, 0));
        btn_simpan_FPengeluaran.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_simpan_FPengeluaran.setHoverColor(new java.awt.Color(51, 153, 0));
        btn_simpan_FPengeluaran.setPressedColor(new java.awt.Color(51, 102, 0));
        btn_simpan_FPengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpan_FPengeluaranActionPerformed(evt);
            }
        });

        JenisPengeluaran.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        JenisPengeluaran.setForeground(new java.awt.Color(1, 0, 0));
        JenisPengeluaran.setText("Kategori");

        shapecustom14.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom14.setRoundBottomLeft(20);
        shapecustom14.setRoundBottomRight(20);
        shapecustom14.setRoundTopLeft(20);
        shapecustom14.setRoundTopRight(20);

        cbbx_pilihKategori.setBackground(new java.awt.Color(255, 253, 253));
        cbbx_pilihKategori.setForeground(new java.awt.Color(1, 0, 0));
        cbbx_pilihKategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pilih Kategori", "Opsi 1", "Opsi 2", "Opsi 3" }));
        cbbx_pilihKategori.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        cbbx_pilihKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbx_pilihKategoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom14Layout = new javax.swing.GroupLayout(shapecustom14);
        shapecustom14.setLayout(shapecustom14Layout);
        shapecustom14Layout.setHorizontalGroup(
            shapecustom14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbx_pilihKategori, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom14Layout.setVerticalGroup(
            shapecustom14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbx_pilihKategori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        TotalHarga.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        TotalHarga.setForeground(new java.awt.Color(1, 0, 0));
        TotalHarga.setText("Total Biaya");

        shapecustom9.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom9.setRoundBottomLeft(20);
        shapecustom9.setRoundBottomRight(20);
        shapecustom9.setRoundTopLeft(20);
        shapecustom9.setRoundTopRight(20);

        fieldTotalHarga.setBackground(new java.awt.Color(255, 253, 253));
        fieldTotalHarga.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        fieldTotalHarga.setForeground(new java.awt.Color(1, 0, 0));
        fieldTotalHarga.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fieldTotalHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldTotalHargaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom9Layout = new javax.swing.GroupLayout(shapecustom9);
        shapecustom9.setLayout(shapecustom9Layout);
        shapecustom9Layout.setHorizontalGroup(
            shapecustom9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldTotalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom9Layout.setVerticalGroup(
            shapecustom9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldTotalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_batal_FPengeluaran.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/icon/icon_batal.png"))); // NOI18N
        btn_batal_FPengeluaran.setText("Batal");
        btn_batal_FPengeluaran.setDefaultColor(new java.awt.Color(255, 153, 0));
        btn_batal_FPengeluaran.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_batal_FPengeluaran.setHoverColor(new java.awt.Color(255, 102, 0));
        btn_batal_FPengeluaran.setPressedColor(new java.awt.Color(204, 102, 0));
        btn_batal_FPengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batal_FPengeluaranActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_abu_FPengeluaranLayout = new javax.swing.GroupLayout(pn_abu_FPengeluaran);
        pn_abu_FPengeluaran.setLayout(pn_abu_FPengeluaranLayout);
        pn_abu_FPengeluaranLayout.setHorizontalGroup(
            pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_abu_FPengeluaranLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_Pengeluaran)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_abu_FPengeluaranLayout.createSequentialGroup()
                        .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pn_abu_FPengeluaranLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_batal_FPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_simpan_FPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pn_abu_FPengeluaranLayout.createSequentialGroup()
                                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_abu_FPengeluaranLayout.createSequentialGroup()
                                        .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(JenisPengeluaran, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(NamaKasir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(IdPengeluaram, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_abu_FPengeluaranLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(TotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(shapecustom14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(shapecustom16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(shapecustom7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(shapecustom9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(50, 50, 50))))
        );
        pn_abu_FPengeluaranLayout.setVerticalGroup(
            pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_abu_FPengeluaranLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(label_Pengeluaran)
                .addGap(25, 25, 25)
                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shapecustom7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IdPengeluaram, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NamaKasir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(shapecustom16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shapecustom14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JenisPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TotalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(shapecustom9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_simpan_FPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_batal_FPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_hitam_FPengeluaranLayout = new javax.swing.GroupLayout(pn_hitam_FPengeluaran);
        pn_hitam_FPengeluaran.setLayout(pn_hitam_FPengeluaranLayout);
        pn_hitam_FPengeluaranLayout.setHorizontalGroup(
            pn_hitam_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hitam_FPengeluaranLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pn_abu_FPengeluaran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pn_hitam_FPengeluaranLayout.setVerticalGroup(
            pn_hitam_FPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hitam_FPengeluaranLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_abu_FPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pn_hitam_DPengeluaran.setBackground(new java.awt.Color(1, 0, 0));
        pn_hitam_DPengeluaran.setRoundBottomLeft(60);
        pn_hitam_DPengeluaran.setRoundBottomRight(60);
        pn_hitam_DPengeluaran.setRoundTopLeft(60);
        pn_hitam_DPengeluaran.setRoundTopRight(60);

        pn_abu_DPengeluaran.setBackground(new java.awt.Color(204, 204, 204));
        pn_abu_DPengeluaran.setRoundBottomLeft(60);
        pn_abu_DPengeluaran.setRoundBottomRight(60);
        pn_abu_DPengeluaran.setRoundTopLeft(60);
        pn_abu_DPengeluaran.setRoundTopRight(60);

        label_DaftarPengeluaran.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        label_DaftarPengeluaran.setForeground(new java.awt.Color(1, 0, 0));
        label_DaftarPengeluaran.setText("Daftar Pengeluaran");

        tbl_Daftar_Pengeluaran.setBackground(new java.awt.Color(255, 253, 253));
        tbl_Daftar_Pengeluaran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID PENGELUARAN", "NAMA KASIR", "KATEGORI", "TOTAL BIAYA"
            }
        ));
        tbl_Daftar_Pengeluaran.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_Daftar_PengeluaranMouseClicked(evt);
            }
        });
        jScrollPanePengeluaran.setViewportView(tbl_Daftar_Pengeluaran);

        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/ui/ux/icons8-edit-30.png"))); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_batal_DPengeluaran.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/icon/icon_batal.png"))); // NOI18N
        btn_batal_DPengeluaran.setText("Batal");
        btn_batal_DPengeluaran.setDefaultColor(new java.awt.Color(255, 153, 0));
        btn_batal_DPengeluaran.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_batal_DPengeluaran.setHoverColor(new java.awt.Color(255, 102, 0));
        btn_batal_DPengeluaran.setPressedColor(new java.awt.Color(204, 102, 0));
        btn_batal_DPengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batal_DPengeluaranActionPerformed(evt);
            }
        });

        btn_hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/icon/icon_hapus.png"))); // NOI18N
        btn_hapus.setText("Hapus");
        btn_hapus.setDefaultColor(new java.awt.Color(255, 51, 51));
        btn_hapus.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_hapus.setHoverColor(new java.awt.Color(255, 0, 0));
        btn_hapus.setPressedColor(new java.awt.Color(153, 0, 0));
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_lihatDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/ui/ux/icons8-ophthalmology-30.png"))); // NOI18N
        btn_lihatDetail.setText("Detail");
        btn_lihatDetail.setDefaultColor(new java.awt.Color(204, 0, 204));
        btn_lihatDetail.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_lihatDetail.setHideActionText(true);
        btn_lihatDetail.setHoverColor(new java.awt.Color(153, 0, 153));
        btn_lihatDetail.setPressedColor(new java.awt.Color(102, 0, 102));
        btn_lihatDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lihatDetailActionPerformed(evt);
            }
        });

        panel_cari_png.setBackground(new java.awt.Color(255, 252, 253));
        panel_cari_png.setRoundBottomLeft(20);
        panel_cari_png.setRoundBottomRight(20);
        panel_cari_png.setRoundTopLeft(20);
        panel_cari_png.setRoundTopRight(20);

        field_cari_DPengeluaran.setBackground(new java.awt.Color(255, 253, 253));
        field_cari_DPengeluaran.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        field_cari_DPengeluaran.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        field_cari_DPengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_cari_DPengeluaranActionPerformed(evt);
            }
        });
        field_cari_DPengeluaran.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                field_cari_DPengeluaranKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_cari_DPengeluaranKeyTyped(evt);
            }
        });

        icon_searchDPengeluaran.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/ui/ux/icons8-search-20.png"))); // NOI18N

        javax.swing.GroupLayout panel_cari_pngLayout = new javax.swing.GroupLayout(panel_cari_png);
        panel_cari_png.setLayout(panel_cari_pngLayout);
        panel_cari_pngLayout.setHorizontalGroup(
            panel_cari_pngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_cari_pngLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(field_cari_DPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(icon_searchDPengeluaran)
                .addContainerGap())
        );
        panel_cari_pngLayout.setVerticalGroup(
            panel_cari_pngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_cari_pngLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(field_cari_DPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(icon_searchDPengeluaran, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pn_abu_DPengeluaranLayout = new javax.swing.GroupLayout(pn_abu_DPengeluaran);
        pn_abu_DPengeluaran.setLayout(pn_abu_DPengeluaranLayout);
        pn_abu_DPengeluaranLayout.setHorizontalGroup(
            pn_abu_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_abu_DPengeluaranLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pn_abu_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_abu_DPengeluaranLayout.createSequentialGroup()
                        .addComponent(btn_lihatDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_batal_DPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pn_abu_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_abu_DPengeluaranLayout.createSequentialGroup()
                            .addComponent(label_DaftarPengeluaran)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel_cari_png, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPanePengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        pn_abu_DPengeluaranLayout.setVerticalGroup(
            pn_abu_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_abu_DPengeluaranLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pn_abu_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_DaftarPengeluaran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_cari_png, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPanePengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pn_abu_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_batal_DPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_lihatDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_hitam_DPengeluaranLayout = new javax.swing.GroupLayout(pn_hitam_DPengeluaran);
        pn_hitam_DPengeluaran.setLayout(pn_hitam_DPengeluaranLayout);
        pn_hitam_DPengeluaranLayout.setHorizontalGroup(
            pn_hitam_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_hitam_DPengeluaranLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_abu_DPengeluaran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pn_hitam_DPengeluaranLayout.setVerticalGroup(
            pn_hitam_DPengeluaranLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hitam_DPengeluaranLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_abu_DPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pn_hitam_FDetail.setBackground(new java.awt.Color(1, 0, 0));
        pn_hitam_FDetail.setForeground(new java.awt.Color(255, 255, 255));
        pn_hitam_FDetail.setRoundBottomLeft(60);
        pn_hitam_FDetail.setRoundBottomRight(60);
        pn_hitam_FDetail.setRoundTopLeft(60);
        pn_hitam_FDetail.setRoundTopRight(60);

        pn_abu_FDetail.setBackground(new java.awt.Color(204, 204, 204));
        pn_abu_FDetail.setRoundBottomLeft(60);
        pn_abu_FDetail.setRoundBottomRight(60);
        pn_abu_FDetail.setRoundTopLeft(60);
        pn_abu_FDetail.setRoundTopRight(60);

        label_Detailrestock.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        label_Detailrestock.setForeground(new java.awt.Color(1, 0, 0));
        label_Detailrestock.setText("Form Detail ReStock");

        PilihBarang.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        PilihBarang.setForeground(new java.awt.Color(1, 0, 0));
        PilihBarang.setText("Pilih Barang");

        shapecustom10.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom10.setRoundBottomLeft(20);
        shapecustom10.setRoundBottomRight(20);
        shapecustom10.setRoundTopLeft(20);
        shapecustom10.setRoundTopRight(20);

        cbbx_pilihBarang.setBackground(new java.awt.Color(255, 253, 253));
        cbbx_pilihBarang.setForeground(new java.awt.Color(4, 0, 0));
        cbbx_pilihBarang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pilih Barang", "Opsi 1", "Opsi 2", "Opsi 3" }));
        cbbx_pilihBarang.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        cbbx_pilihBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbx_pilihBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom10Layout = new javax.swing.GroupLayout(shapecustom10);
        shapecustom10.setLayout(shapecustom10Layout);
        shapecustom10Layout.setHorizontalGroup(
            shapecustom10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shapecustom10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbx_pilihBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom10Layout.setVerticalGroup(
            shapecustom10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbx_pilihBarang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        shapecustom11.setBackground(new java.awt.Color(235, 235, 235));
        shapecustom11.setRoundBottomLeft(20);
        shapecustom11.setRoundBottomRight(20);
        shapecustom11.setRoundTopLeft(20);
        shapecustom11.setRoundTopRight(20);

        fieldIdBarang.setBackground(new java.awt.Color(235, 235, 235));
        fieldIdBarang.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        fieldIdBarang.setForeground(new java.awt.Color(1, 0, 0));
        fieldIdBarang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fieldIdBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldIdBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom11Layout = new javax.swing.GroupLayout(shapecustom11);
        shapecustom11.setLayout(shapecustom11Layout);
        shapecustom11Layout.setHorizontalGroup(
            shapecustom11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldIdBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom11Layout.setVerticalGroup(
            shapecustom11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldIdBarang)
                .addContainerGap())
        );

        IdBarang.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        IdBarang.setForeground(new java.awt.Color(1, 0, 0));
        IdBarang.setText("ID Barang");

        btn_simpan_FDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/icon/icon_simpan.png"))); // NOI18N
        btn_simpan_FDetail.setText("Simpan");
        btn_simpan_FDetail.setDefaultColor(new java.awt.Color(51, 204, 0));
        btn_simpan_FDetail.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_simpan_FDetail.setHoverColor(new java.awt.Color(51, 153, 0));
        btn_simpan_FDetail.setPressedColor(new java.awt.Color(51, 102, 0));
        btn_simpan_FDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpan_FDetailActionPerformed(evt);
            }
        });

        Barcode.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        Barcode.setForeground(new java.awt.Color(1, 0, 0));
        Barcode.setText("Barcode");

        shapecustom12.setBackground(new java.awt.Color(235, 235, 235));
        shapecustom12.setRoundBottomLeft(20);
        shapecustom12.setRoundBottomRight(20);
        shapecustom12.setRoundTopLeft(20);
        shapecustom12.setRoundTopRight(20);

        fieldBarcode.setBackground(new java.awt.Color(235, 235, 235));
        fieldBarcode.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        fieldBarcode.setForeground(new java.awt.Color(1, 0, 0));
        fieldBarcode.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fieldBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldBarcodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom12Layout = new javax.swing.GroupLayout(shapecustom12);
        shapecustom12.setLayout(shapecustom12Layout);
        shapecustom12Layout.setHorizontalGroup(
            shapecustom12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldBarcode, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom12Layout.setVerticalGroup(
            shapecustom12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldBarcode)
                .addContainerGap())
        );

        shapecustom13.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom13.setRoundBottomLeft(20);
        shapecustom13.setRoundBottomRight(20);
        shapecustom13.setRoundTopLeft(20);
        shapecustom13.setRoundTopRight(20);

        fieldJumlahBeli.setBackground(new java.awt.Color(255, 253, 253));
        fieldJumlahBeli.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        fieldJumlahBeli.setForeground(new java.awt.Color(1, 0, 0));
        fieldJumlahBeli.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fieldJumlahBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldJumlahBeliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom13Layout = new javax.swing.GroupLayout(shapecustom13);
        shapecustom13.setLayout(shapecustom13Layout);
        shapecustom13Layout.setHorizontalGroup(
            shapecustom13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldJumlahBeli, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom13Layout.setVerticalGroup(
            shapecustom13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldJumlahBeli)
                .addContainerGap())
        );

        JumlahBeli.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        JumlahBeli.setForeground(new java.awt.Color(1, 0, 0));
        JumlahBeli.setText("Jumlah Beli");

        shapecustom15.setBackground(new java.awt.Color(255, 252, 253));
        shapecustom15.setRoundBottomLeft(20);
        shapecustom15.setRoundBottomRight(20);
        shapecustom15.setRoundTopLeft(20);
        shapecustom15.setRoundTopRight(20);

        fieldTotalBiaya.setBackground(new java.awt.Color(255, 253, 253));
        fieldTotalBiaya.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        fieldTotalBiaya.setForeground(new java.awt.Color(1, 0, 0));
        fieldTotalBiaya.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fieldTotalBiaya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldTotalBiayaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom15Layout = new javax.swing.GroupLayout(shapecustom15);
        shapecustom15.setLayout(shapecustom15Layout);
        shapecustom15Layout.setHorizontalGroup(
            shapecustom15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldTotalBiaya, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        shapecustom15Layout.setVerticalGroup(
            shapecustom15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldTotalBiaya)
                .addContainerGap())
        );

        TotalBiaya.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        TotalBiaya.setForeground(new java.awt.Color(1, 0, 0));
        TotalBiaya.setText("Total Biaya");

        btn_batal_FDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/icon/icon_batal.png"))); // NOI18N
        btn_batal_FDetail.setText("Batal");
        btn_batal_FDetail.setDefaultColor(new java.awt.Color(255, 153, 0));
        btn_batal_FDetail.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_batal_FDetail.setHoverColor(new java.awt.Color(255, 102, 0));
        btn_batal_FDetail.setPressedColor(new java.awt.Color(204, 102, 0));
        btn_batal_FDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batal_FDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_abu_FDetailLayout = new javax.swing.GroupLayout(pn_abu_FDetail);
        pn_abu_FDetail.setLayout(pn_abu_FDetailLayout);
        pn_abu_FDetailLayout.setHorizontalGroup(
            pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_abu_FDetailLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_Detailrestock)
                    .addComponent(PilihBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JumlahBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TotalBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_abu_FDetailLayout.createSequentialGroup()
                .addGap(0, 231, Short.MAX_VALUE)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shapecustom10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pn_abu_FDetailLayout.createSequentialGroup()
                        .addComponent(btn_batal_FDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_simpan_FDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(shapecustom11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shapecustom12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shapecustom13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shapecustom15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        pn_abu_FDetailLayout.setVerticalGroup(
            pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_abu_FDetailLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(label_Detailrestock)
                .addGap(28, 28, 28)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shapecustom10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PilihBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shapecustom11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shapecustom12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shapecustom13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JumlahBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shapecustom15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TotalBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_abu_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_simpan_FDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_batal_FDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout pn_hitam_FDetailLayout = new javax.swing.GroupLayout(pn_hitam_FDetail);
        pn_hitam_FDetail.setLayout(pn_hitam_FDetailLayout);
        pn_hitam_FDetailLayout.setHorizontalGroup(
            pn_hitam_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hitam_FDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_abu_FDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pn_hitam_FDetailLayout.setVerticalGroup(
            pn_hitam_FDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hitam_FDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_abu_FDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pn_hitam_DDetail.setBackground(new java.awt.Color(1, 0, 0));
        pn_hitam_DDetail.setForeground(new java.awt.Color(255, 255, 255));
        pn_hitam_DDetail.setRoundBottomLeft(60);
        pn_hitam_DDetail.setRoundBottomRight(60);
        pn_hitam_DDetail.setRoundTopLeft(60);
        pn_hitam_DDetail.setRoundTopRight(60);

        pn_abu_DDetail.setBackground(new java.awt.Color(204, 204, 204));
        pn_abu_DDetail.setRoundBottomLeft(60);
        pn_abu_DDetail.setRoundBottomRight(60);
        pn_abu_DDetail.setRoundTopLeft(60);
        pn_abu_DDetail.setRoundTopRight(60);

        tbl_Daftar_Detail.setBackground(new java.awt.Color(255, 253, 253));
        tbl_Daftar_Detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, "Rp29.000.000,00"},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID PENGELUARAN", "ID BARANG", "BARCODE", "NAMA BARANG", "JUMLAH BELI", "TOTAL BIAYA"
            }
        ));
        jScrollPane2.setViewportView(tbl_Daftar_Detail);

        label_Detailrestock2.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        label_Detailrestock2.setForeground(new java.awt.Color(1, 0, 0));
        label_Detailrestock2.setText("Daftar Detail ReStock");

        pn_cari_dtl.setBackground(new java.awt.Color(255, 252, 253));
        pn_cari_dtl.setRoundBottomLeft(20);
        pn_cari_dtl.setRoundBottomRight(20);
        pn_cari_dtl.setRoundTopLeft(20);
        pn_cari_dtl.setRoundTopRight(20);

        field_cari_DDetail.setBackground(new java.awt.Color(255, 253, 253));
        field_cari_DDetail.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        field_cari_DDetail.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        field_cari_DDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_cari_DDetailActionPerformed(evt);
            }
        });
        field_cari_DDetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_cari_DDetailKeyTyped(evt);
            }
        });

        icon_searchDDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/ui/ux/icons8-search-20.png"))); // NOI18N

        javax.swing.GroupLayout pn_cari_dtlLayout = new javax.swing.GroupLayout(pn_cari_dtl);
        pn_cari_dtl.setLayout(pn_cari_dtlLayout);
        pn_cari_dtlLayout.setHorizontalGroup(
            pn_cari_dtlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_cari_dtlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(field_cari_DDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(icon_searchDDetail)
                .addContainerGap())
        );
        pn_cari_dtlLayout.setVerticalGroup(
            pn_cari_dtlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_cari_dtlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(field_cari_DDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(icon_searchDDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btn_tutupDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/ui/ux/icons8-blind-30.png"))); // NOI18N
        btn_tutupDetail.setText("Tutup");
        btn_tutupDetail.setDefaultColor(new java.awt.Color(204, 0, 204));
        btn_tutupDetail.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        btn_tutupDetail.setHoverColor(new java.awt.Color(153, 0, 153));
        btn_tutupDetail.setPressedColor(new java.awt.Color(102, 0, 102));
        btn_tutupDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tutupDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_abu_DDetailLayout = new javax.swing.GroupLayout(pn_abu_DDetail);
        pn_abu_DDetail.setLayout(pn_abu_DDetailLayout);
        pn_abu_DDetailLayout.setHorizontalGroup(
            pn_abu_DDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_abu_DDetailLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pn_abu_DDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_abu_DDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pn_abu_DDetailLayout.createSequentialGroup()
                            .addComponent(label_Detailrestock2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pn_cari_dtl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_tutupDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_abu_DDetailLayout.setVerticalGroup(
            pn_abu_DDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_abu_DDetailLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pn_abu_DDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_Detailrestock2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_cari_dtl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_tutupDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout pn_hitam_DDetailLayout = new javax.swing.GroupLayout(pn_hitam_DDetail);
        pn_hitam_DDetail.setLayout(pn_hitam_DDetailLayout);
        pn_hitam_DDetailLayout.setHorizontalGroup(
            pn_hitam_DDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hitam_DDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_abu_DDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pn_hitam_DDetailLayout.setVerticalGroup(
            pn_hitam_DDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hitam_DDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_abu_DDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pn_hitam_FPengeluaran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_hitam_FDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_hitam_DPengeluaran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_hitam_DDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pn_hitam_DPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn_hitam_DDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pn_hitam_FPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn_hitam_FDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void fieldTotalHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldTotalHargaActionPerformed
        ;        // TODO add your handling code here:
    }//GEN-LAST:event_fieldTotalHargaActionPerformed

    private void cbbx_pilihKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbx_pilihKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbx_pilihKategoriActionPerformed

    private void btn_simpan_FPengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpan_FPengeluaranActionPerformed
        String kategori = cbbx_pilihKategori.getSelectedItem().toString();
        String totalText = fieldTotalHarga.getText().replaceAll("[^\\d]", "");
        BigDecimal total = new BigDecimal(totalText.isEmpty() ? "0" : totalText);
        String idPengeluaran = fieldIdPengeluaran.getText().trim();

        if (!validasiPengeluaran(kategori, total)) return;

        try {
            if (sedangEditPengeluaran && idPengeluaranYangSedangDiedit != null &&
                idPengeluaran.equals(idPengeluaranYangSedangDiedit)) {
                //update deita
                updatePengeluaran(idPengeluaran, kategori, total);
                JOptionPane.showMessageDialog(this, "Data pengeluaran berhasil diperbarui.");
            } else {
                //insert deita
                if (cekDuplicateIdPengeluaran(idPengeluaran)) {
                    JOptionPane.showMessageDialog(this, "ID Pengeluaran sudah ada.\nKlik tombol Edit untuk memperbarui data.");
                    return;
                }
                insertPengeluaran(idPengeluaran, idUserTerpilih, kategori, total);
                JOptionPane.showMessageDialog(this, "Data pengeluaran berhasil disimpan.");
            }

            resetFormPengeluaran();
            DefaultTableModel model = (DefaultTableModel) tbl_Daftar_Pengeluaran.getModel();
            getDataPengeluaran(model);
            batalkanModeEditPengeluaran();
            idPengeluaranYangSedangDiedit = null;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_simpan_FPengeluaranActionPerformed

    private void fieldNamaKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNamaKasirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNamaKasirActionPerformed

    private void fieldIdPengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldIdPengeluaranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldIdPengeluaranActionPerformed

    private void fieldTotalBiayaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldTotalBiayaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldTotalBiayaActionPerformed

    private void fieldJumlahBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldJumlahBeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldJumlahBeliActionPerformed

    private void fieldBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldBarcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldBarcodeActionPerformed

    private void btn_simpan_FDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpan_FDetailActionPerformed
        if (!validasiDetailRestock()) return;
        String idBarang = fieldIdBarang.getText().trim();
        String jumlahText = fieldJumlahBeli.getText().trim();
        String totalBiayaText = fieldTotalBiaya.getText().replaceAll("[^\\d]", "");
        String idPengeluaran = fieldIdPengeluaran.getText().trim();

        try {
            int idBarangInt = Integer.parseInt(idBarang);
            int jumlahBeli = Integer.parseInt(jumlahText);
            BigDecimal totalBiaya = new BigDecimal(totalBiayaText);

            if (isModeEdit()) {
                updateRestockBarang(idPengeluaran, idUserTerpilih, idBarangInt, jumlahBeli, totalBiaya);
                JOptionPane.showMessageDialog(this, "Data restock berhasil diperbarui.");
            } else {
                if (cekDuplicateIdPengeluaran(idPengeluaran)) {
                    JOptionPane.showMessageDialog(this, "ID Pengeluaran sudah ada.\nKlik tombol Edit untuk memperbarui data.");
                    return;
                }

                insertRestockBarang(idPengeluaran, idUserTerpilih, idBarangInt, jumlahBeli, totalBiaya);
                JOptionPane.showMessageDialog(this, "Restock barang berhasil dicatat.");
            }

            fieldTotalHarga.setText(formatRupiah(totalBiaya));

            resetFormDetailRestock();
            resetFormPengeluaran();
            DefaultTableModel modelPengeluaran = (DefaultTableModel) tbl_Daftar_Pengeluaran.getModel();
            getDataPengeluaran(modelPengeluaran);
            DefaultTableModel modelDetail = (DefaultTableModel) tbl_Daftar_Detail.getModel();
            getDataDetailRestock(modelDetail);
            btn_batal_FDetail.setVisible(false);
            periksaStatusFormDetail(true);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data restock: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_simpan_FDetailActionPerformed

    private void fieldIdBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldIdBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldIdBarangActionPerformed

    private void cbbx_pilihBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbx_pilihBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbx_pilihBarangActionPerformed
    
    
    private void field_cari_DPengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_cari_DPengeluaranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_cari_DPengeluaranActionPerformed

    private void field_cari_DDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_cari_DDetailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_cari_DDetailActionPerformed

    private void btn_batal_FPengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batal_FPengeluaranActionPerformed
        cbbx_pilihKategori.setSelectedIndex(0);
        periksaStatusFormPengeluaran();
        periksaStatusFormDetail(true);
        aturTampilanBerdasarkanKategori();
        resetFormPengeluaran();
        resetFormDetailRestock();
        btn_simpan_FPengeluaran.setText("Simpan");
        batalkanModeEditPengeluaran();
    }//GEN-LAST:event_btn_batal_FPengeluaranActionPerformed

    private void btn_batal_FDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batal_FDetailActionPerformed
        resetFormDetailRestock();
        resetFormPengeluaran();
        periksaStatusFormDetail(true);
        periksaStatusFormPengeluaran();
        btn_simpan_FDetail.setText("Simpan");
    }//GEN-LAST:event_btn_batal_FDetailActionPerformed

    private void field_cari_DPengeluaranKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_cari_DPengeluaranKeyReleased
    
    }//GEN-LAST:event_field_cari_DPengeluaranKeyReleased

    private void tbl_Daftar_PengeluaranMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_Daftar_PengeluaranMouseClicked
        
    }//GEN-LAST:event_tbl_Daftar_PengeluaranMouseClicked

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed

    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_batal_DPengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batal_DPengeluaranActionPerformed
        sembunyikanTombolEditBatalHapus();
    }//GEN-LAST:event_btn_batal_DPengeluaranActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        aktifkanModeEditPengeluaran();
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_lihatDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lihatDetailActionPerformed
        aturTampilanDaftarDetail(true);
    }//GEN-LAST:event_btn_lihatDetailActionPerformed

    private void btn_tutupDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tutupDetailActionPerformed
        aturTampilanDaftarDetail(false);
    }//GEN-LAST:event_btn_tutupDetailActionPerformed

    private void field_cari_DPengeluaranKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_cari_DPengeluaranKeyTyped
        String kataKunci = field_cari_DPengeluaran.getText();
        DefaultTableModel model = (DefaultTableModel) tbl_Daftar_Pengeluaran.getModel();
        model.setRowCount(0);

        try {
            String sql = """
                SELECT p.id_pengeluaran, p.kategori, p.nominal, u.username AS kasir
                FROM pengeluaran p
                JOIN users u ON p.id_user = u.id_user
                WHERE CAST(p.id_pengeluaran AS CHAR) LIKE ? 
                   OR p.kategori LIKE ? 
                   OR u.username LIKE ?
                ORDER BY p.id_pengeluaran ASC
            """;

            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, "%" + kataKunci + "%");
                st.setString(2, "%" + kataKunci + "%");
                st.setString(3, "%" + kataKunci + "%");
                ResultSet rs = st.executeQuery();

                NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));
                DecimalFormatSymbols symbols = ((DecimalFormat) formatRupiah).getDecimalFormatSymbols();
                symbols.setCurrencySymbol("Rp");
                symbols.setMonetaryDecimalSeparator(',');
                ((DecimalFormat) formatRupiah).setDecimalFormatSymbols(symbols);
                ((DecimalFormat) formatRupiah).setMaximumFractionDigits(0);

                while (rs.next()) {
                    String idPengeluaran = rs.getString("id_pengeluaran");
                    String kasir = rs.getString("kasir");
                    String kategori = rs.getString("kategori");
                    String nominal = formatRupiah.format(rs.getDouble("nominal"));

                    Object[] rowData = {idPengeluaran, kasir, kategori, nominal};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(FormPengeluaranMigrasi.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_field_cari_DPengeluaranKeyTyped

    private void field_cari_DDetailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_cari_DDetailKeyTyped
        String kataKunci = field_cari_DDetail.getText();
        DefaultTableModel model = (DefaultTableModel) tbl_Daftar_Detail.getModel();
        model.setRowCount(0);

        try {
            String sql = """
                SELECT 
                    p.id_pengeluaran, 
                    b.id_barang, 
                    b.barcode, 
                    b.nama_barang, 
                    p.jumlah_barang AS jumlah_beli, 
                    p.nominal AS total_biaya
                FROM 
                    pengeluaran p
                JOIN 
                    barang b ON p.id_barang = b.id_barang
                WHERE 
                    p.kategori = 'Restock Barang' AND (
                        CAST(p.id_pengeluaran AS CHAR) LIKE ? OR 
                        b.barcode LIKE ? OR 
                        b.nama_barang LIKE ?
                    )
                ORDER BY 
                    p.id_pengeluaran ASC
            """;

            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, "%" + kataKunci + "%");
                st.setString(2, "%" + kataKunci + "%");
                st.setString(3, "%" + kataKunci + "%");
                ResultSet rs = st.executeQuery();

                NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));
                DecimalFormatSymbols symbols = ((DecimalFormat) formatRupiah).getDecimalFormatSymbols();
                symbols.setCurrencySymbol("Rp");
                symbols.setMonetaryDecimalSeparator(',');
                ((DecimalFormat) formatRupiah).setDecimalFormatSymbols(symbols);
                ((DecimalFormat) formatRupiah).setMaximumFractionDigits(0);
                while (rs.next()) {
                    String idPengeluaran = rs.getString("id_pengeluaran");
                    String idBarang = rs.getString("id_barang");
                    String barcode = rs.getString("barcode");
                    String namaBarang = rs.getString("nama_barang");
                    int jumlahBeli = rs.getInt("jumlah_beli");
                    String totalBiaya = formatRupiah.format(rs.getDouble("total_biaya"));

                    Object[] rowData = {idPengeluaran, idBarang, barcode, namaBarang, jumlahBeli, totalBiaya};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(FormPengeluaranMigrasi.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_field_cari_DDetailKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Barcode;
    private javax.swing.JLabel IdBarang;
    private javax.swing.JLabel IdPengeluaram;
    private javax.swing.JLabel JenisPengeluaran;
    private javax.swing.JLabel JumlahBeli;
    private javax.swing.JLabel NamaKasir;
    private javax.swing.JLabel PilihBarang;
    private javax.swing.JLabel TotalBiaya;
    private javax.swing.JLabel TotalHarga;
    private com.ananta.shape.CustomButton btn_batal_DPengeluaran;
    private com.ananta.shape.CustomButton btn_batal_FDetail;
    private com.ananta.shape.CustomButton btn_batal_FPengeluaran;
    private com.ananta.shape.CustomButton btn_edit;
    private com.ananta.shape.CustomButton btn_hapus;
    private com.ananta.shape.CustomButton btn_lihatDetail;
    private com.ananta.shape.CustomButton btn_simpan_FDetail;
    private com.ananta.shape.CustomButton btn_simpan_FPengeluaran;
    private com.ananta.shape.CustomButton btn_tutupDetail;
    private com.ananta.shape.CustomComboBox cbbx_pilihBarang;
    private com.ananta.shape.CustomComboBox cbbx_pilihKategori;
    private com.raven.datechooser.DateChooser dateChooser1;
    private javax.swing.JTextField fieldBarcode;
    private javax.swing.JTextField fieldIdBarang;
    private javax.swing.JTextField fieldIdPengeluaran;
    private javax.swing.JTextField fieldJumlahBeli;
    private javax.swing.JTextField fieldNamaKasir;
    private javax.swing.JTextField fieldTotalBiaya;
    private javax.swing.JTextField fieldTotalHarga;
    private javax.swing.JTextField field_cari_DDetail;
    private javax.swing.JTextField field_cari_DPengeluaran;
    private javax.swing.JLabel icon_searchDDetail;
    private javax.swing.JLabel icon_searchDPengeluaran;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPanePengeluaran;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel label_DaftarPengeluaran;
    private javax.swing.JLabel label_Detailrestock;
    private javax.swing.JLabel label_Detailrestock2;
    private javax.swing.JLabel label_Pengeluaran;
    private com.ananta.shape.shapecustom panel_cari_png;
    private com.ananta.shape.shapecustom pn_abu_DDetail;
    private com.ananta.shape.shapecustom pn_abu_DPengeluaran;
    private com.ananta.shape.shapecustom pn_abu_FDetail;
    private com.ananta.shape.shapecustom pn_abu_FPengeluaran;
    private com.ananta.shape.shapecustom pn_cari_dtl;
    private com.ananta.shape.shapecustom pn_hitam_DDetail;
    private com.ananta.shape.shapecustom pn_hitam_DPengeluaran;
    private com.ananta.shape.shapecustom pn_hitam_FDetail;
    private com.ananta.shape.shapecustom pn_hitam_FPengeluaran;
    private com.ananta.shape.shapecustom shapecustom10;
    private com.ananta.shape.shapecustom shapecustom11;
    private com.ananta.shape.shapecustom shapecustom12;
    private com.ananta.shape.shapecustom shapecustom13;
    private com.ananta.shape.shapecustom shapecustom14;
    private com.ananta.shape.shapecustom shapecustom15;
    private com.ananta.shape.shapecustom shapecustom16;
    private com.ananta.shape.shapecustom shapecustom2;
    private com.ananta.shape.shapecustom shapecustom3;
    private com.ananta.shape.shapecustom shapecustom4;
    private com.ananta.shape.shapecustom shapecustom5;
    private com.ananta.shape.shapecustom shapecustom7;
    private com.ananta.shape.shapecustom shapecustom9;
    private com.ananta.shape.JTabeel tbl_Daftar_Detail;
    private com.ananta.shape.JTabeel tbl_Daftar_Pengeluaran;
    // End of variables declaration//GEN-END:variables

    
    //FORM PENGELUARAN
    private void initFormPengeluaran() {
        // 1. Atur layout vertikal dan susun panel-panel utama
        setupPanelUtama();

        // 2. Sembunyikan panel detail daftar saat awal
        aturTampilanDaftarDetail(false);

        // 3. Sembunyikan panel detail form (jika awal buka form bukan restock)
        pn_hitam_FDetail.setVisible(false);
        pn_abu_FDetail.setVisible(false);

        // 4. Atur ukuran panel form pengeluaran sesuai kondisi awal
        setUkuranPanelFormPengeluaran(982, 970);
    }

    
    private void setupPanelAwal() {
        pn_hitam_FDetail.setVisible(false);
        pn_abu_FDetail.setVisible(false);
        setUkuranPanelFormPengeluaran(982, 970);
    }

    private void setupPanelUtama() {
        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));

        this.removeAll();
        this.add(pn_hitam_DPengeluaran);
        this.add(pn_abu_DPengeluaran);
        this.add(jScrollPanePengeluaran);
        this.add(pn_hitam_DDetail);
        this.add(pn_abu_DDetail);
        this.revalidate();
        this.repaint();
    }
    
    private void setupListener() {
        cbbx_pilihKategori.addActionListener(e -> {
            aturTampilanBerdasarkanKategori();
            aturEditFieldTotalHarga();
            periksaStatusFormPengeluaran();
        });
        fieldTotalHarga.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                periksaStatusFormPengeluaran();
                if (fieldTotalHarga.isEditable()) {
                    int caretPos = fieldTotalHarga.getCaretPosition(); // simpan posisi caret

                    String input = fieldTotalHarga.getText().replaceAll("[^\\d]", "");
                    if (!input.isEmpty()) {
                        try {
                            BigDecimal angka = new BigDecimal(input);
                            String formatted = formatRupiah(angka);

                            fieldTotalHarga.setText(formatted);

                            // Hitung caretPos baru berdasarkan panjang hasil format
                            int newLength = formatted.length();
                            int offset = newLength - input.length();
                            fieldTotalHarga.setCaretPosition(Math.min(caretPos + offset, newLength));
                        } catch (NumberFormatException ex) {
                            fieldTotalHarga.setText("");
                        }
                    } else {
                        fieldTotalHarga.setText("Rp0");
                        fieldTotalHarga.setCaretPosition(fieldTotalHarga.getText().length());
                    }
                }
            }
        });
        fieldTotalBiaya.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                periksaStatusFormDetail(true);
                int caretPos = fieldTotalBiaya.getCaretPosition();
                String input = fieldTotalBiaya.getText().replaceAll("[^\\d]", "");
                if (!input.isEmpty()) {
                    try {
                        BigDecimal angka = new BigDecimal(input);
                        String formatted = formatRupiah(angka);
                        fieldTotalBiaya.setText(formatted);

                        int newLength = formatted.length();
                        int offset = newLength - input.length();
                        fieldTotalBiaya.setCaretPosition(Math.min(caretPos + offset, newLength));
                    } catch (NumberFormatException ex) {
                        fieldTotalBiaya.setText("");
                    }
                } else {
                    fieldTotalBiaya.setText("Rp0");
                    fieldTotalBiaya.setCaretPosition(fieldTotalBiaya.getText().length());
                }
            }
        });
        
        fieldJumlahBeli.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                periksaStatusFormDetail(true);
            }
        });
        
        tbl_Daftar_Pengeluaran.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting() && tbl_Daftar_Pengeluaran.getSelectedRow() != -1) {
                tampilkanTombolEditBatalHapus();
            }
        });
    }

    private void setIdPengeluaranOtomatis() {
        try {
            String sql = "SELECT MAX(id_pengeluaran) AS max_id FROM pengeluaran";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            int nextId = (rs.next() && rs.getInt("max_id") != 0) ? rs.getInt("max_id") + 1 : 1;
            fieldIdPengeluaran.setText(String.valueOf(nextId));
            fieldIdPengeluaran.setEditable(false);
            fieldIdPengeluaran.setFocusable(false);
            rs.close();
            pst.close();
        } catch (Exception e) {
            System.out.println("Gagal mengambil ID pengeluaran: " + e.getMessage());
        }
    }

    private void isiNamaKasir() {
        try {
            String sql = "SELECT id_user, username FROM users WHERE role = 'kasir'";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                idUserTerpilih = rs.getInt("id_user");
                fieldNamaKasir.setText(rs.getString("username"));
                fieldNamaKasir.setEditable(false);
                fieldNamaKasir.setFocusable(false);
            }
            rs.close();
            pst.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat nama kasir: " + e.getMessage());
        }
    }

    private void setKategoriPengeluaran() {
        String[] kategori = {
            "Pilih Jenis Pengeluaran", "Restock Barang", "Perlengkapan Barbershop",
            "Bahan Jasa", "Perawatan Alat", "Listrik", "Air", "WiFi / Internet",
            "Sewa Tempat", "Kebersihan / Laundry", "Servis Alat Cukur",
            "Servis AC", "Perbaikan Interior", "Iklan / Promosi", "Lain-lain"
        };
        cbbx_pilihKategori.removeAllItems();
        for (String item : kategori) {
            cbbx_pilihKategori.addItem(item);
        }
    }

    private void aturTampilanBerdasarkanKategori() {
        boolean isRestock = "Restock Barang".equals(cbbx_pilihKategori.getSelectedItem());
        pn_hitam_FDetail.setVisible(isRestock);
        pn_abu_FDetail.setVisible(isRestock);
        if (isRestock) {
            setUkuranPanelFormPengeluaran(444, 432);
        } else {
            setUkuranPanelFormPengeluaran(982, 970);
        }
    }

    private void setUkuranPanelFormPengeluaran(int tinggiHitam, int tinggiAbu) {
        pn_hitam_FPengeluaran.setPreferredSize(new java.awt.Dimension(
            pn_hitam_FPengeluaran.getWidth(), tinggiHitam
        ));
        pn_abu_FPengeluaran.setPreferredSize(new java.awt.Dimension(
            pn_abu_FPengeluaran.getWidth(), tinggiAbu
        ));
        pn_hitam_FPengeluaran.revalidate();
        pn_abu_FPengeluaran.revalidate();
        this.repaint();
    }
    
    private void setUkuranPanelDetailPengeluaran(int tinggiHitam, int tinggiAbu) {
        pn_hitam_DPengeluaran.setPreferredSize(new java.awt.Dimension(
            pn_hitam_DPengeluaran.getWidth(), tinggiHitam
        ));
        pn_abu_DPengeluaran.setPreferredSize(new java.awt.Dimension(
            pn_abu_DPengeluaran.getWidth(), tinggiAbu
        ));
        pn_hitam_DPengeluaran.revalidate();
        pn_abu_DPengeluaran.revalidate();
        this.repaint();
    }

    private void aturEditFieldTotalHarga() {
        boolean isRestock = "Restock Barang".equals(cbbx_pilihKategori.getSelectedItem());
        fieldTotalHarga.setEditable(!isRestock);
        if (isRestock) {
            ambilTotalBiayaDariDetail();
        } else {
            fieldTotalHarga.setText("Rp 0,00");
        }
    }

    private void ambilTotalBiayaDariDetail() {
        try {
            String text = fieldTotalBiaya.getText().replaceAll("[^\\d]", "");
            BigDecimal total = text.isEmpty() ? BigDecimal.ZERO : new BigDecimal(text);
            fieldTotalHarga.setText(formatRupiah(total));
            periksaStatusFormPengeluaran();
        } catch (Exception e) {
            fieldTotalHarga.setText("Rp0");
        }
    }

    private String formatRupiah(BigDecimal value) {
        NumberFormat format = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));
        DecimalFormatSymbols symbols = ((DecimalFormat) format).getDecimalFormatSymbols();
        symbols.setCurrencySymbol("Rp");
        symbols.setMonetaryDecimalSeparator(',');
        ((DecimalFormat) format).setDecimalFormatSymbols(symbols);
        ((DecimalFormat) format).setMaximumFractionDigits(0);
        return format.format(value);
    }
    
    private void resetFormPengeluaran() {
        cbbx_pilihKategori.setSelectedIndex(0);
        fieldTotalHarga.setText("Rp 0,00");
        aturTampilanBerdasarkanKategori(); 
        btn_simpan_FPengeluaran.setText("Simpan");
        
        // Reset mode edit
        sedangEditPengeluaran = false;
        idPengeluaranYangSedangDiedit = null;
        setIdPengeluaranOtomatis();
        sembunyikanTombolEditBatalHapus();
        periksaStatusFormPengeluaran();
    }
    
    private void periksaStatusFormPengeluaran() {
        String kategori = cbbx_pilihKategori.getSelectedItem().toString();
        String total = fieldTotalHarga.getText().replaceAll("[^\\d]", "");
        boolean isTotalKosong = total.isEmpty() || total.equals("0") || total.equals("00") || total.equals("000");
        boolean isKategoriDefault = kategori.equals("Pilih Jenis Pengeluaran");
        boolean isFormAktif = !(isKategoriDefault && isTotalKosong);
        btn_batal_FPengeluaran.setVisible(isFormAktif);
    }

    private void periksaStatusFormDetail(boolean par) {
        String barang = cbbx_pilihBarang.getSelectedItem().toString();
        String jumlah = fieldJumlahBeli.getText().trim();
        String totalBiaya = fieldTotalBiaya.getText().replaceAll("[^\\d]", "");
        boolean isFormAktif = !barang.equals("Pilih Barang") || !jumlah.isEmpty() || !totalBiaya.isEmpty() && !totalBiaya.equals("0");
        btn_batal_FDetail.setVisible(isFormAktif);
    }
    
    //FORM DETAIL RESTOCK BARANG
    private void setUkuranPanelDaftarPengeluaran(int tinggiHitam, int tinggiAbu) {
        pn_hitam_DPengeluaran.setPreferredSize(new Dimension(
            pn_hitam_DPengeluaran.getWidth(), tinggiHitam
        ));
        pn_abu_DPengeluaran.setPreferredSize(new Dimension(
            pn_abu_DPengeluaran.getWidth(), tinggiAbu
        ));
        pn_hitam_DPengeluaran.revalidate();
        pn_abu_DPengeluaran.revalidate();
        pn_hitam_DPengeluaran.repaint();
        pn_abu_DPengeluaran.repaint();
    }
    
    private void aturUkuranScrollPengeluaran(int tinggiScroll) {
        jScrollPanePengeluaran.setMinimumSize(new Dimension(0, tinggiScroll));
        jScrollPanePengeluaran.setPreferredSize(new Dimension(jScrollPanePengeluaran.getWidth(), tinggiScroll));
        jScrollPanePengeluaran.setMaximumSize(new Dimension(Integer.MAX_VALUE, tinggiScroll));
        jScrollPanePengeluaran.setSize(new Dimension(jScrollPanePengeluaran.getWidth(), tinggiScroll));

        jScrollPanePengeluaran.revalidate();
        jScrollPanePengeluaran.repaint();
    }
    
    private void aturTampilanDaftarDetail(boolean tampil) {
        pn_hitam_DDetail.setVisible(tampil);
        pn_abu_DDetail.setVisible(tampil);

        // Ukuran panel scroll pengeluaran (tinggi tabel daftar pengeluaran)
        int tinggiTabel = tampil ? 400 : 860;
        aturUkuranScrollPengeluaran(tinggiTabel);

        // Ukuran panel luar daftar pengeluaran
        setUkuranPanelDaftarPengeluaran(982, 970); // Tetap, bisa disesuaikan bila perlu

        // Tombol lihat detail nonaktif jika sedang tampil detail
        btn_lihatDetail.setVisible(!tampil);
        btn_lihatDetail.setEnabled(!tampil);

        System.out.println("Tampilan detail diatur: " + tampil);
    }
    
    private void loadBarangKeComboBox() {
        try {
            String sql = "SELECT nama_barang FROM barang";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            cbbx_pilihBarang.removeAllItems();
            cbbx_pilihBarang.addItem("Pilih Barang");
            while (rs.next()) {
                cbbx_pilihBarang.addItem(rs.getString("nama_barang"));
            }
            rs.close();
            pst.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal load barang: " + e.getMessage());
        }
    }
    
    private void setupListenerComboBoxBarang() {
        cbbx_pilihBarang.addActionListener(e -> {
            periksaStatusFormDetail(true);
            String namaDipilih = cbbx_pilihBarang.getSelectedItem().toString();
            if (namaDipilih.equals("Pilih Barang")) {
                fieldIdBarang.setText("");
                fieldBarcode.setText("");
                return;
            }
            try {
                String sql = "SELECT id_barang, barcode FROM barang WHERE nama_barang = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, namaDipilih);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    fieldIdBarang.setText(String.valueOf(rs.getInt("id_barang")));
                    fieldBarcode.setText(rs.getString("barcode"));
                }
                rs.close();
                pst.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Gagal mengambil data barang: " + ex.getMessage());
            }
        });
        fieldIdBarang.setEditable(false);
        fieldBarcode.setEditable(false);
    }
    
    private void resetFormDetailRestock() {
        cbbx_pilihBarang.setSelectedIndex(0);
        fieldIdBarang.setText("");
        fieldBarcode.setText("");
        fieldJumlahBeli.setText("");
        fieldTotalBiaya.setText("");
    }
    
    private void isiFormDetailRestock(String idPengeluaran) {
        try {
            String sql = """
                SELECT p.id_barang, p.jumlah_barang, p.nominal, 
                       b.nama_barang, b.barcode 
                FROM pengeluaran p 
                JOIN barang b ON p.id_barang = b.id_barang 
                WHERE p.id_pengeluaran = ?
            """;
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, idPengeluaran);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                String idBarang = rs.getString("id_barang");
                String namaBarang = rs.getString("nama_barang");
                String barcode = rs.getString("barcode");
                int jumlahBeli = rs.getInt("jumlah_barang");
                double totalBiaya = rs.getDouble("nominal");

                fieldIdBarang.setText(idBarang);
                fieldIdBarang.setEditable(false);
                fieldIdBarang.setFocusable(false);
                fieldBarcode.setText(barcode);
                fieldBarcode.setEditable(false);
                fieldBarcode.setFocusable(false);
                fieldJumlahBeli.setText(String.valueOf(jumlahBeli));
                cbbx_pilihBarang.setSelectedItem(namaBarang);

                NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));
                DecimalFormatSymbols symbols = ((DecimalFormat) formatRupiah).getDecimalFormatSymbols();
                symbols.setCurrencySymbol("Rp");
                symbols.setMonetaryDecimalSeparator(',');
                ((DecimalFormat) formatRupiah).setDecimalFormatSymbols(symbols);
                ((DecimalFormat) formatRupiah).setMaximumFractionDigits(0);
                fieldTotalBiaya.setText(formatRupiah.format(totalBiaya));
                fieldTotalHarga.setEditable(false);
                fieldTotalHarga.setText(formatRupiah.format(totalBiaya));
            }

            rs.close();
            pst.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data detail restock.");
        }
    }

    
    //TABEL TABEL
    private void setModelTabelPengeluaran() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID PENGELUARAN");
        model.addColumn("NAMA KASIR");
        model.addColumn("KATEGORI");
        model.addColumn("TOTAL BIAYA");
        tbl_Daftar_Pengeluaran.setModel(model);
    }
    
    private void aturLebarKolomPengeluaran() {
        TableColumnModel kolom = tbl_Daftar_Pengeluaran.getColumnModel();
        kolom.getColumn(0).setPreferredWidth(120); // ID Pengeluaran
        kolom.getColumn(1).setPreferredWidth(150); // Nama Kasir
        kolom.getColumn(2).setPreferredWidth(130); // Kategori
        kolom.getColumn(3).setPreferredWidth(130); // Total Biaya
    }
    
    private void getDataPengeluaran(DefaultTableModel model) {
        model.setRowCount(0);
        try {
            model.setRowCount(0);
            String sql = """
                SELECT p.id_pengeluaran, p.kategori, p.nominal, u.username AS kasir
                FROM pengeluaran p
                JOIN users u ON p.id_user = u.id_user
                ORDER BY p.id_pengeluaran ASC
             """;

            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));
            DecimalFormatSymbols symbols = ((DecimalFormat) formatRupiah).getDecimalFormatSymbols();
            symbols.setCurrencySymbol("Rp");
            symbols.setMonetaryDecimalSeparator(',');
            ((DecimalFormat) formatRupiah).setDecimalFormatSymbols(symbols);
            ((DecimalFormat) formatRupiah).setMaximumFractionDigits(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                rs.getString("id_pengeluaran"),
                rs.getString("kasir"),
                rs.getString("kategori"),
                formatRupiah.format(rs.getDouble("nominal"))
                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal memuat data pengeluaran.");
        }
    }
    
    private void setModelTabelDetailRestock() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID PENGELUARAN");
        model.addColumn("ID BARANG");
        model.addColumn("BARCODE");
        model.addColumn("NAMA BARANG");
        model.addColumn("JUMLAH BELI");
        model.addColumn("TOTAL BIAYA");
        tbl_Daftar_Detail.setModel(model);
    }
    
    private void getDataDetailRestock(DefaultTableModel model) {
        model.setRowCount(0);
        try {
            String sql = """
                SELECT 
                    p.id_pengeluaran, 
                    b.id_barang, 
                    b.barcode, 
                    b.nama_barang, 
                    p.jumlah_barang AS jumlah_beli, 
                    p.nominal AS total_biaya
                FROM 
                    pengeluaran p
                JOIN 
                    barang b ON p.id_barang = b.id_barang
                WHERE 
                    p.kategori = 'Restock Barang'
                ORDER BY 
                    p.id_pengeluaran ASC
            """;

            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));
            DecimalFormatSymbols symbols = ((DecimalFormat) formatRupiah).getDecimalFormatSymbols();
            symbols.setCurrencySymbol("Rp");
            symbols.setMonetaryDecimalSeparator(',');
            ((DecimalFormat) formatRupiah).setDecimalFormatSymbols(symbols);
            ((DecimalFormat) formatRupiah).setMaximumFractionDigits(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("id_pengeluaran"),
                    rs.getInt("id_barang"),
                    rs.getString("barcode"),
                    rs.getString("nama_barang"),
                    rs.getInt("jumlah_beli"),
                    formatRupiah.format(rs.getDouble("total_biaya"))
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal memuat data detail restock.");
        }
    }
    

    private void aktifkanModeEditPengeluaran() {
        int row = tbl_Daftar_Pengeluaran.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih data yang ingin diedit.");
            return;
        }

        String id = tbl_Daftar_Pengeluaran.getValueAt(row, 0).toString(); 
        String namaKasir = tbl_Daftar_Pengeluaran.getValueAt(row, 1).toString();
        String kategori = tbl_Daftar_Pengeluaran.getValueAt(row, 2).toString();
        String total = tbl_Daftar_Pengeluaran.getValueAt(row, 3).toString();

        fieldIdPengeluaran.setText(id);
        fieldNamaKasir.setText(namaKasir);
        cbbx_pilihKategori.setSelectedItem(kategori);
        fieldTotalHarga.setText(total);

        btn_simpan_FDetail.setText("Update");
        btn_simpan_FPengeluaran.setText("Update");

        sedangEditPengeluaran = true;
        idPengeluaranYangSedangDiedit = id; 

        if (kategori.equals("Restock Barang")) {
            periksaStatusFormDetail(true);
            isiFormDetailRestock(id);
        } else {
            periksaStatusFormDetail(false);
        }
    }
    
    private boolean isModeEdit() {
        return sedangEditPengeluaran 
               && idPengeluaranYangSedangDiedit != null 
               && fieldIdPengeluaran.getText().equals(idPengeluaranYangSedangDiedit);
    }
    
    private void batalkanModeEditPengeluaran() {
        if (!sedangEditPengeluaran) {
        return;
        }

        int pilihan = JOptionPane.showConfirmDialog(
            null,
            "Ingin keluar dari mode edit?",
            "Konfirmasi",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (pilihan == JOptionPane.YES_OPTION) {
            cbbx_pilihKategori.setSelectedIndex(0);
            periksaStatusFormPengeluaran();
            periksaStatusFormDetail(true);
            aturTampilanBerdasarkanKategori();
            resetFormPengeluaran();
            resetFormDetailRestock();
            btn_simpan_FPengeluaran.setText("Simpan");
            sedangEditPengeluaran = false;
        }
    }
    
    private void sembunyikanTombolEditBatalHapus() {
        btn_edit.setVisible(false); 
        btn_batal_DPengeluaran.setVisible(false);
        btn_hapus.setVisible(false);
    }

    private void tampilkanTombolEditBatalHapus() {
        btn_edit.setVisible(true);
        btn_batal_DPengeluaran.setVisible(true);
        btn_hapus.setVisible(true);
    }

        // --- Validasi umum pengeluaran ---
    private boolean validasiPengeluaran(String kategori, BigDecimal total) {
        if (kategori.equals("Pilih Jenis Pengeluaran")) {
            JOptionPane.showMessageDialog(this, "Silakan pilih jenis pengeluaran.");
            return false;
        }
        if (total.compareTo(BigDecimal.ZERO) <= 0) {
            JOptionPane.showMessageDialog(this, "Total pengeluaran tidak boleh kosong.");
            return false;
        }
        return true;
    }
    
    private boolean cekDuplicateIdPengeluaran(String idPengeluaran) throws SQLException {
        String cekSQL = "SELECT COUNT(*) FROM pengeluaran WHERE id_pengeluaran = ?";
        try (PreparedStatement cekStmt = conn.prepareStatement(cekSQL)) {
            cekStmt.setString(1, idPengeluaran);
            try (ResultSet rs = cekStmt.executeQuery()) {
                if (rs.next()) {
                    return rs.getInt(1) > 0;
                }
            }
        }
        return false;
    }


    private void insertPengeluaran(String idPengeluaran, int idUser, String kategori, BigDecimal nominal) throws SQLException {
        String sql = """
            INSERT INTO pengeluaran (id_pengeluaran, id_user, kategori, nominal)
            VALUES (?, ?, ?, ?)
        """;
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, idPengeluaran);
        pst.setInt(2, idUser);
        pst.setString(3, kategori);
        pst.setBigDecimal(4, nominal);
        pst.executeUpdate();
        pst.close();
    }

    // --- Update pengeluaran ---
    private void updatePengeluaran(String idPengeluaran, String kategori, BigDecimal nominal) throws SQLException {
        String sql = """
            UPDATE pengeluaran 
            SET kategori = ?, nominal = ? 
            WHERE id_pengeluaran = ?
        """;
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, kategori);
        pst.setBigDecimal(2, nominal);
        pst.setString(3, idPengeluaran);
        pst.executeUpdate();
        pst.close();
    }

    private boolean validasiDetailRestock() {
        String namaBarang = cbbx_pilihBarang.getSelectedItem().toString();
        String idBarang = fieldIdBarang.getText().trim();
        String barcode = fieldBarcode.getText().trim();
        String jumlahText = fieldJumlahBeli.getText().trim();
        String totalBiayaText = fieldTotalBiaya.getText().replaceAll("[^\\d]", "");

        if (namaBarang.equals("Pilih Barang") || idBarang.isEmpty() || barcode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan pilih barang terlebih dahulu.");
            return false;
        }
        try {
            int jumlah = Integer.parseInt(jumlahText);
            if (jumlah <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah beli harus lebih dari 0.");
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Jumlah beli harus berupa angka bulat.");
            return false;
        }

        if (totalBiayaText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Total biaya belum diisi.");
            return false;
        }

        BigDecimal total = new BigDecimal(totalBiayaText);
        if (total.compareTo(BigDecimal.ZERO) <= 0) {
            JOptionPane.showMessageDialog(this, "Total biaya tidak boleh nol.");
            return false;
        }
        return true;
    }

    
    // --- Insert restock barang baru ---
    private void insertRestockBarang(String idPengeluaran, int idUser, int idBarang, int jumlahBarang, BigDecimal nominal) throws SQLException {
        String sql = """
            INSERT INTO pengeluaran (id_pengeluaran, id_user, kategori, id_barang, jumlah_barang, nominal)
            VALUES (?, ?, ?, ?, ?, ?)
        """;
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, idPengeluaran);
        pst.setInt(2, idUser);
        pst.setString(3, "Restock Barang");
        pst.setInt(4, idBarang);
        pst.setInt(5, jumlahBarang);
        pst.setBigDecimal(6, nominal);
        pst.executeUpdate();
        pst.close();
    }

    // --- Update restock barang ---
    private void updateRestockBarang(String idPengeluaran, int idUser, int idBarang, int jumlahBarang, BigDecimal nominal) throws SQLException {
        String sql = """
            UPDATE pengeluaran 
            SET id_user = ?, kategori = ?, id_barang = ?, jumlah_barang = ?, nominal = ?
            WHERE id_pengeluaran = ?
        """;
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setInt(1, idUser);
        pst.setString(2, "Restock Barang");
        pst.setInt(3, idBarang);
        pst.setInt(4, jumlahBarang);
        pst.setBigDecimal(5, nominal);
        pst.setString(6, idPengeluaran);
        pst.executeUpdate();
        pst.close();
    }
}

    

