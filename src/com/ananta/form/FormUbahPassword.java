package com.ananta.form;

import com.ananta.database.Database;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.util.UIScale;
import static com.pengaturan.otp.getEmail.sessionData.userData;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.LayoutManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author choos
 */
public class FormUbahPassword extends javax.swing.JPanel {
    private CardLayout cardLayout;
    private JPanel parent;
    /**
     * Creates new form FormUbahPassword
     */
    public FormUbahPassword(CardLayout layout, JPanel parentPanel) {       
        
        initComponents();
        setLayoutForm();
        
        this.cardLayout = layout;
        this.parent = parentPanel;
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        UbahPanel = new javax.swing.JPanel();
        LabelIcon = new javax.swing.JLabel();
        UbahLabel = new javax.swing.JLabel();
        LabelPassword = new javax.swing.JLabel();
        PasswordPanel = new javax.swing.JPasswordField();
        LabelKonfirmasi = new javax.swing.JLabel();
        KonfirmasiPanel = new javax.swing.JPasswordField();
        CekBoks = new javax.swing.JCheckBox();
        UbahButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        LabelIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\choos\\Downloads\\AnantaB\\AnantaB\\src\\com\\ananta\\icon\\Logo_Ananta.png")); // NOI18N

        UbahLabel.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        UbahLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UbahLabel.setText("Change Password");

        LabelPassword.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        LabelPassword.setText("New Password");

        PasswordPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordPanelActionPerformed(evt);
            }
        });

        LabelKonfirmasi.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        LabelKonfirmasi.setText("Confirm Password");

        KonfirmasiPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KonfirmasiPanelActionPerformed(evt);
            }
        });

        CekBoks.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        CekBoks.setText("Show Password");
        CekBoks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CekBoksActionPerformed(evt);
            }
        });

        UbahButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        UbahButton.setText("Change ");
        UbahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UbahButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UbahPanelLayout = new javax.swing.GroupLayout(UbahPanel);
        UbahPanel.setLayout(UbahPanelLayout);
        UbahPanelLayout.setHorizontalGroup(
            UbahPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UbahPanelLayout.createSequentialGroup()
                .addGroup(UbahPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UbahPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(UbahPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LabelIcon)
                            .addComponent(CekBoks)
                            .addGroup(UbahPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(LabelKonfirmasi)
                                .addComponent(PasswordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                                .addComponent(LabelPassword)
                                .addComponent(KonfirmasiPanel))
                            .addComponent(UbahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(UbahPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(UbahLabel)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        UbahPanelLayout.setVerticalGroup(
            UbahPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UbahPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(LabelIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UbahLabel)
                .addGap(62, 62, 62)
                .addComponent(LabelPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LabelKonfirmasi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KonfirmasiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CekBoks)
                .addGap(28, 28, 28)
                .addComponent(UbahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UbahPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UbahPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void PasswordPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordPanelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordPanelActionPerformed

    private void KonfirmasiPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KonfirmasiPanelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KonfirmasiPanelActionPerformed

    private void CekBoksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CekBoksActionPerformed
        if (CekBoks.isSelected()) {
            PasswordPanel.setEchoChar('\u0000');
            KonfirmasiPanel.setEchoChar('\u0000');
        } else {
            PasswordPanel.setEchoChar('*');
            KonfirmasiPanel.setEchoChar('*');
        }
    }//GEN-LAST:event_CekBoksActionPerformed

    private void UbahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UbahButtonActionPerformed
        String passwordBaru = new String(PasswordPanel.getPassword());
        String konfirmasiPW = new String(KonfirmasiPanel.getPassword());

        if (konfirmasiPW.isEmpty() || passwordBaru.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Field tidak boleh kosong!");
            return;
        }
        
        if (!passwordBaru.equals(konfirmasiPW)){
            JOptionPane.showMessageDialog(this, "Password yg anda masukkan tidak sama!");
           return;
        }
        
        String hashedPassword = BCrypt.hashpw(passwordBaru, BCrypt.gensalt());

        if (updatePassword(userData, hashedPassword)) {
            JOptionPane.showMessageDialog(this, "Password berhasil diubah!");
            cardLayout.show(parent, "login");
        } else {
            JOptionPane.showMessageDialog(this, "Gagal mengubah password.");
        }
    }//GEN-LAST:event_UbahButtonActionPerformed
    private boolean updatePassword(String userData, String hashedPassword) {
        try (Connection conn = Database.getConnection()) {
            String query = "UPDATE users SET password = ? WHERE username = ?";
            PreparedStatement pst = conn.prepareStatement(query);

            pst.setString(1, hashedPassword); // gunakan yang sudah di-hash dari luar
            pst.setString(2, userData);

            return pst.executeUpdate() > 0;
        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CekBoks;
    private javax.swing.JPasswordField KonfirmasiPanel;
    private javax.swing.JLabel LabelIcon;
    private javax.swing.JLabel LabelKonfirmasi;
    private javax.swing.JLabel LabelPassword;
    private javax.swing.JPasswordField PasswordPanel;
    private javax.swing.JButton UbahButton;
    private javax.swing.JLabel UbahLabel;
    private javax.swing.JPanel UbahPanel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    private void setLayoutForm() {
    setLayout(new UbahPasswordLayout());        
    UbahPanel.setLayout(new UbahLayout());

    UbahPanel.putClientProperty(FlatClientProperties.STYLE, ""
            + "background:$Login.background;"
            + "arc:30;"
            + "border:20,20,40,20");

    PasswordPanel.putClientProperty(FlatClientProperties.STYLE, ""
                + "showRevealButton:true;"
                + "showCapsLock:true;"
                + "arc:10;");
    
    KonfirmasiPanel.putClientProperty(FlatClientProperties.STYLE, ""
                + "showRevealButton:true;"
                + "showCapsLock:true;"
                + "arc:10;");

        // Gaya untuk ButtonLogin
    UbahButton.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:10;"
                + "borderWidth:0;"
                + "focusWidth:0;");

    Dimension fieldSize = new Dimension(0, 40);
    PasswordPanel.setPreferredSize(fieldSize);
    KonfirmasiPanel.setPreferredSize(fieldSize);
    
    UbahButton.setPreferredSize(new Dimension(120, 40));
    
    }
    
        private class UbahPasswordLayout implements LayoutManager {

        @Override
        public void addLayoutComponent(String name, Component comp) {

        }

        @Override
        public void removeLayoutComponent(Component comp) {

        }

        @Override
        public Dimension preferredLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                return new Dimension(0, 0);
                
            }
        }

        @Override
        public Dimension minimumLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                return new Dimension(0, 0);
            }
        }

        @Override
        public void layoutContainer(Container parent) {
            synchronized (parent.getTreeLock()) {
                int width = parent.getWidth();
                int height = parent.getHeight();
                int UbahPanelWidth = UIScale.scale(300);
                int UbahPanelHeight = UbahPanel.getPreferredSize().height;
                int x = (width - UbahPanelWidth) / 2;
                int y = (height - UbahPanelHeight) / 2;
                UbahPanel.setBounds(x, y, UbahPanelWidth, UbahPanelHeight);
            }
        }

    }
        private class UbahLayout implements LayoutManager {

        private final int titleGap = 20;
        private final int textGap = 10;
        private final int labelGap = 10;
        private final int buttonGap = 20;

        @Override
        public void addLayoutComponent(String name, Component comp) {
        }
        @Override
        public void removeLayoutComponent(Component comp) {
        }

        @Override
        public Dimension preferredLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                Insets insets = parent.getInsets();
               
                int height = insets.top + insets.bottom;

                height += LabelIcon.getPreferredSize().height;
                height += UIScale.scale(titleGap);
                height += UbahLabel.getPreferredSize().height;
                height += UIScale.scale(titleGap);

                height += LabelPassword.getPreferredSize().height;
                height += UIScale.scale(labelGap);
                height += PasswordPanel.getPreferredSize().height;
                height += UIScale.scale(textGap);
                
                height += LabelKonfirmasi.getPreferredSize().height;
                height += UIScale.scale(labelGap);
                height += KonfirmasiPanel.getPreferredSize().height;
                height += UIScale.scale(textGap);
                
                height += CekBoks.getPreferredSize().height;
                height += UIScale.scale(buttonGap);
                
                height += UbahButton.getPreferredSize().height; // register button
                height += UIScale.scale(buttonGap);
                height += UbahButton.getPreferredSize().height;
                height += UIScale.scale(textGap);

                return new Dimension(0, height);
            }
        }

        @Override
        public Dimension minimumLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                return new Dimension(0, 0);
            }
        }

        @Override
        public void layoutContainer(Container parent) {
            synchronized (parent.getTreeLock()) {
                Insets insets = parent.getInsets();
                int x = insets.left;
                int y = insets.top;
                int width = parent.getWidth() - (insets.left + insets.right);

                LabelIcon.setBounds(x, y, width, LabelIcon.getPreferredSize().height);
                y += LabelIcon.getPreferredSize().height + UIScale.scale(titleGap);
                UbahLabel.setBounds(x, y, width, UbahLabel.getPreferredSize().height);
                y += UbahLabel.getPreferredSize().height + UIScale.scale(titleGap);
                              
                LabelPassword.setBounds(x, y, width, LabelPassword.getPreferredSize().height);
                y += LabelPassword.getPreferredSize().height + UIScale.scale(labelGap);
                PasswordPanel.setBounds(x, y, width, PasswordPanel.getPreferredSize().height);
                y += PasswordPanel.getPreferredSize().height + UIScale.scale(textGap);
                
                LabelKonfirmasi.setBounds(x, y, width, LabelKonfirmasi.getPreferredSize().height);
                y += LabelKonfirmasi.getPreferredSize().height + UIScale.scale(labelGap);
                KonfirmasiPanel.setBounds(x, y, width, KonfirmasiPanel.getPreferredSize().height);
                y += KonfirmasiPanel.getPreferredSize().height + UIScale.scale(textGap);

                int buttonWidth = UbahButton.getPreferredSize().width;
                int buttonX = x + (width - buttonWidth) / 2;
                UbahButton.setBounds(buttonX, y, buttonWidth, UbahButton.getPreferredSize().height);             
                
                int CekBoksWidth = 150;
                int CekBoksHeight = 30;
                int CekBoksX = x + 195;
                int CekBoksY = y + -10;
                CekBoks.setBounds(CekBoksX, CekBoksY, CekBoksWidth, CekBoksHeight);
                y += CekBoksHeight + UIScale.scale(buttonGap);
                
                // Login Button (posisi dan ukuran manual)
                int UbahButtonWidth = 320;
                int UbahButtonHeight = 40;
                int UbahButtonX = x + 9;
                int UbahButtonY = y + 20;
                UbahButton.setBounds(UbahButtonX, UbahButtonY, UbahButtonWidth, UbahButtonHeight);
                y += UbahButtonHeight + UIScale.scale(textGap);
               
            }
        }
    }
}
