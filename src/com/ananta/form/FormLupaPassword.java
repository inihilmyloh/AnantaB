
package com.ananta.form;

import com.ananta.database.Database;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.util.UIScale;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import com.pengaturan.otp.getEmail;
import com.pengaturan.otp.getEmail.sessionData;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author choos
 */
public class FormLupaPassword extends javax.swing.JPanel {

    private CardLayout cardLayout;
    private JPanel parent;
    
    public FormLupaPassword(CardLayout layout, JPanel parentPanel) {
        initComponents();
        setLayoutForm();
        
        this.cardLayout = layout;
        this.parent = parentPanel;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelLupa = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        UserLabel = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        UserPane = new javax.swing.JTextField();
        KirimButton = new javax.swing.JButton();
        KembaliButton = new javax.swing.JButton();
        LabelIcon = new javax.swing.JLabel();
        LabelPw = new javax.swing.JLabel();
        EmailPane = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        PanelLupa.setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PanelLupa.add(jLabel1);
        jLabel1.setBounds(343, 18, 0, 77);

        UserLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        UserLabel.setText("Username");
        PanelLupa.add(UserLabel);
        UserLabel.setBounds(40, 220, 63, 18);

        EmailLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        EmailLabel.setText("Email");
        PanelLupa.add(EmailLabel);
        EmailLabel.setBounds(40, 300, 36, 18);

        UserPane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserPaneActionPerformed(evt);
            }
        });
        PanelLupa.add(UserPane);
        UserPane.setBounds(40, 240, 294, 41);

        KirimButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        KirimButton.setText("KIRIM OTP");
        KirimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KirimButtonActionPerformed(evt);
            }
        });
        PanelLupa.add(KirimButton);
        KirimButton.setBounds(40, 420, 294, 49);

        KembaliButton.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        KembaliButton.setText("KEMBALI");
        KembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KembaliButtonActionPerformed(evt);
            }
        });
        PanelLupa.add(KembaliButton);
        KembaliButton.setBounds(40, 370, 126, 22);

        LabelIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ananta/ui/ux/Logo_Ananta.png"))); // NOI18N
        PanelLupa.add(LabelIcon);
        LabelIcon.setBounds(38, 18, 299, 85);

        LabelPw.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        LabelPw.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelPw.setText("Lupa Password");
        PanelLupa.add(LabelPw);
        LabelPw.setBounds(127, 135, 126, 22);
        PanelLupa.add(EmailPane);
        EmailPane.setBounds(40, 320, 294, 39);

        add(PanelLupa, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void UserPaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserPaneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserPaneActionPerformed

    private void KirimButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KirimButtonActionPerformed

        String usernamePane = UserPane.getText().trim();
        String emailPane = EmailPane.getText().trim();

        if(emailPane.isEmpty() || usernamePane.isEmpty()){
            JOptionPane.showMessageDialog(this, "Isi field yang kosong!");
        }
        Connection conn = Database.getConnection();

        if(conn != null){
            try {
                String sql = "SELECT * FROM users WHERE username = ? AND email = ?";
                PreparedStatement checkPst = conn.prepareStatement(sql);
                checkPst.setString(1, usernamePane);
                checkPst.setString(2, emailPane);

                ResultSet rs = checkPst.executeQuery();

                if(rs.next()) {
                    JOptionPane.showMessageDialog(this, "Verifikasi Berhasil!");

                    String emailFromDb = rs.getString("email");
                    sessionData.emailData = emailPane;
                    sessionData.userData = usernamePane;
                    getEmail.emailResend(emailPane);
                    
                    cardLayout.show(parent, "otp");
               
                } else {
                    JOptionPane.showMessageDialog(this, "Username dan Email tidak sesuai!");
                    UserPane.setText("");
                    EmailPane.setText("");
                    UserPane.requestFocus();
                }

            } catch(SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Database gagal terkoneksi!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Database gagal terkoneksi!");
        }
    }//GEN-LAST:event_KirimButtonActionPerformed
    
    private void KembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KembaliButtonActionPerformed
    cardLayout.show(parent, "login");
    }//GEN-LAST:event_KembaliButtonActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailPane;
    private javax.swing.JButton KembaliButton;
    private javax.swing.JButton KirimButton;
    private javax.swing.JLabel LabelIcon;
    private javax.swing.JLabel LabelPw;
    private javax.swing.JPanel PanelLupa;
    private javax.swing.JLabel UserLabel;
    private javax.swing.JTextField UserPane;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
     private void setLayoutForm() {
        setLayout(new FormLupaLayout());
        PanelLupa.setLayout(new LupaLayout());

        // Gaya PanelLogin
        PanelLupa.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$Login.background;"
                + "arc:30;"
                + "border:20,20,40,20");

        // Gaya untuk TextPassword
        UserPane.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:10;");

        // Gaya untuk TextUsername
        EmailPane.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:10;");

        // Gaya untuk ButtonLogin
        KirimButton.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:10;"
                + "borderWidth:0;"
                + "focusWidth:0;");

        // ✅ Atur tinggi TextUsername dan TextPassword
        Dimension fieldSize = new Dimension(0, 40); // 0 = biar layout tetap pakai full lebar
        UserPane.setPreferredSize(fieldSize);
        EmailPane.setPreferredSize(fieldSize);

        // ✅ Atur tinggi dan lebar ButtonLogin
        KirimButton.setPreferredSize(new Dimension(120, 40));
    }
     
    private class FormLupaLayout implements LayoutManager {

        @Override
        public void addLayoutComponent(String name, Component comp) {

        }

        @Override
        public void removeLayoutComponent(Component comp) {

        }

        @Override
        public Dimension preferredLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                return new Dimension(0, 0);
                
            }
        }

        @Override
        public Dimension minimumLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                return new Dimension(0, 0);
            }
        }

        @Override
        public void layoutContainer(Container parent) {
            synchronized (parent.getTreeLock()) {
                int width = parent.getWidth();
                int height = parent.getHeight();
                int loginWidth = UIScale.scale(300);
                int loginHeight = PanelLupa.getPreferredSize().height;
                int x = (width - loginWidth) / 2;
                int y = (height - loginHeight) / 2;
                PanelLupa.setBounds(x, y, loginWidth, loginHeight);
            }
        }

    } 
     
    private class LupaLayout implements LayoutManager {

        private final int titleGap = 10;
        private final int textGap = 10;
        private final int labelGap = 10;
        private final int buttonGap = 30;

        @Override
        public void addLayoutComponent(String name, Component comp) {

        }

        @Override
        public void removeLayoutComponent(Component comp) {

        }

        @Override
        public Dimension preferredLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                Insets insets = parent.getInsets();
               
                int height = insets.top + insets.bottom;

                height += LabelIcon.getPreferredSize().height;
                height += UIScale.scale(titleGap);
                height += LabelPw.getPreferredSize().height;
                height += UIScale.scale(titleGap);

                height += UserLabel.getPreferredSize().height;
                height += UIScale.scale(labelGap);
                height += UserPane.getPreferredSize().height;
                height += UIScale.scale(textGap);

                height += EmailLabel.getPreferredSize().height;
                height += UIScale.scale(labelGap);
                height += EmailPane.getPreferredSize().height;
                height += UIScale.scale(textGap);

                height += KembaliButton.getPreferredSize().height;
                height += UIScale.scale(buttonGap);

                height += KirimButton.getPreferredSize().height;
                height += UIScale.scale(textGap);

               // height += Register.getPreferredSize().height;
               // height += UIScale.scale(textGap); // opsional, padding bawa
                return new Dimension(0, height);
            }
        }

        @Override
        public Dimension minimumLayoutSize(Container parent) {
            synchronized (parent.getTreeLock()) {
                return new Dimension(0, 0);
            }
        }

        @Override
        public void layoutContainer(Container parent) {
            synchronized (parent.getTreeLock()) {
                Insets insets = parent.getInsets();
                int x = insets.left;
                int y = insets.top;
                int width = parent.getWidth() - (insets.left + insets.right);

                LabelIcon.setBounds(x, y, width, LabelIcon.getPreferredSize().height);
                y += LabelIcon.getPreferredSize().height + UIScale.scale(titleGap);

                LabelPw.setBounds(x, y, width, LabelPw.getPreferredSize().height);
                y += LabelPw.getPreferredSize().height + UIScale.scale(titleGap);

                UserLabel.setBounds(x, y, width, UserLabel.getPreferredSize().height);
                y += UserLabel.getPreferredSize().height + UIScale.scale(labelGap);
                UserPane.setBounds(x, y, width, UserPane.getPreferredSize().height);
                y += UserPane.getPreferredSize().height + UIScale.scale(textGap);

                EmailLabel.setBounds(x, y, width, EmailLabel.getPreferredSize().height);
                y += EmailLabel.getPreferredSize().height + UIScale.scale(labelGap);
                EmailPane.setBounds(x, y, width, EmailPane.getPreferredSize().height);
                y += EmailPane.getPreferredSize().height + UIScale.scale(buttonGap);

                int buttonWidth = KirimButton.getPreferredSize().width;
                int buttonX = x + (width - buttonWidth) / 2;
                KirimButton.setBounds(buttonX, y, buttonWidth, KirimButton.getPreferredSize().height);

                // Tombol "Lupa Password"
           // Tentukan ukuran dan posisi manual untuk LupaButton
                int lupaButtonWidth = 150;
                int lupaButtonHeight = 30;
                int lupaButtonX = x + -2;  // dari kiri
                int lupaButtonY = y + -20;       // bisa atur manual y
                KembaliButton.setBounds(lupaButtonX, lupaButtonY, lupaButtonWidth, lupaButtonHeight);
                y += lupaButtonHeight + UIScale.scale(buttonGap);             
                
                // Login Button (posisi dan ukuran manual)
                int loginButtonWidth = 320;
                int loginButtonHeight = 40;
                int loginButtonX = x + (width - loginButtonWidth) / 2;
                KirimButton.setBounds(loginButtonX, y, loginButtonWidth, loginButtonHeight);
                y += loginButtonHeight + UIScale.scale(buttonGap);

                // Register Button (manual)
            }
        }
    } 
}

//lupalayout
//formLupaLayout
//setLayoutForm