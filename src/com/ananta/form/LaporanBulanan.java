/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.ananta.form;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import com.ananta.database.Database;
import java.text.NumberFormat;
import java.util.Locale;
/**
 *
 * @author M.Khoiril
 */
public class LaporanBulanan extends javax.swing.JPanel {

    private Connection conn;

    public LaporanBulanan() {
        initComponents();
        conn = Database.getConnection();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        whiteBg = new com.ananta.shape.shapecustom();
        kuning_card_RK = new com.ananta.shape.shapecustom();
        label_RK = new javax.swing.JLabel();
        hijau_card_RK = new com.ananta.shape.shapecustom();
        labelPengeluaran = new javax.swing.JLabel();
        labelLabaBersih = new javax.swing.JLabel();
        Rp = new javax.swing.JLabel();
        Rp1 = new javax.swing.JLabel();
        Rp2 = new javax.swing.JLabel();
        labelPemasukan = new javax.swing.JLabel();
        PemasukanDlmAngka = new javax.swing.JLabel();
        PengeluaranDlmAngka = new javax.swing.JLabel();
        LabaDlmAngka = new javax.swing.JLabel();
        kuning_card_RO = new com.ananta.shape.shapecustom();
        label_RO = new javax.swing.JLabel();
        hijau_card_RO = new com.ananta.shape.shapecustom();
        titikdua = new javax.swing.JLabel();
        titikdua1 = new javax.swing.JLabel();
        titikdua2 = new javax.swing.JLabel();
        labelJasa = new javax.swing.JLabel();
        labelProduk = new javax.swing.JLabel();
        labelTerlaris = new javax.swing.JLabel();
        titikdua3 = new javax.swing.JLabel();
        labelTransaksi = new javax.swing.JLabel();
        TransaksiDlmAngka = new javax.swing.JLabel();
        JasaDlmAngka = new javax.swing.JLabel();
        ProdukDlmAngka = new javax.swing.JLabel();
        txtTerlaris = new javax.swing.JLabel();
        numTerlaris = new javax.swing.JLabel();
        kuning_card_RK1 = new com.ananta.shape.shapecustom();
        labelRiwayatTransaksi = new javax.swing.JLabel();
        shapecustom2 = new com.ananta.shape.shapecustom();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTaabel1 = new com.ananta.shape.JTabeel();

        setBackground(new java.awt.Color(153, 153, 153));

        whiteBg.setBackground(new java.awt.Color(255, 255, 255));
        whiteBg.setRoundBottomLeft(80);
        whiteBg.setRoundBottomRight(80);
        whiteBg.setRoundTopLeft(80);
        whiteBg.setRoundTopRight(80);

        kuning_card_RK.setBackground(new java.awt.Color(255, 153, 0));
        kuning_card_RK.setRoundTopLeft(60);
        kuning_card_RK.setRoundTopRight(60);

        label_RK.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        label_RK.setText("Ringkasan Keuangan");

        javax.swing.GroupLayout kuning_card_RKLayout = new javax.swing.GroupLayout(kuning_card_RK);
        kuning_card_RK.setLayout(kuning_card_RKLayout);
        kuning_card_RKLayout.setHorizontalGroup(
            kuning_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kuning_card_RKLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(label_RK)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        kuning_card_RKLayout.setVerticalGroup(
            kuning_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kuning_card_RKLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(label_RK)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        hijau_card_RK.setBackground(new java.awt.Color(0, 119, 32));
        hijau_card_RK.setRoundBottomLeft(20);
        hijau_card_RK.setRoundBottomRight(20);

        labelPengeluaran.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelPengeluaran.setForeground(new java.awt.Color(255, 255, 255));
        labelPengeluaran.setText("Pengeluaran");

        labelLabaBersih.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelLabaBersih.setForeground(new java.awt.Color(255, 255, 255));
        labelLabaBersih.setText("Laba");

        Rp.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        Rp.setForeground(new java.awt.Color(255, 255, 255));
        Rp.setText(":");

        Rp1.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        Rp1.setForeground(new java.awt.Color(255, 255, 255));
        Rp1.setText(":");

        Rp2.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        Rp2.setForeground(new java.awt.Color(255, 255, 255));
        Rp2.setText(":");

        labelPemasukan.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelPemasukan.setForeground(new java.awt.Color(255, 255, 255));
        labelPemasukan.setText("Pemasukan");

        PemasukanDlmAngka.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        PemasukanDlmAngka.setForeground(new java.awt.Color(255, 255, 255));
        PemasukanDlmAngka.setText("8.645.000,00");

        PengeluaranDlmAngka.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        PengeluaranDlmAngka.setForeground(new java.awt.Color(255, 255, 255));
        PengeluaranDlmAngka.setText("2.815.000,00");

        LabaDlmAngka.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        LabaDlmAngka.setForeground(new java.awt.Color(255, 255, 255));
        LabaDlmAngka.setText("5.335.000,00");

        javax.swing.GroupLayout hijau_card_RKLayout = new javax.swing.GroupLayout(hijau_card_RK);
        hijau_card_RK.setLayout(hijau_card_RKLayout);
        hijau_card_RKLayout.setHorizontalGroup(
            hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hijau_card_RKLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelLabaBersih, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPengeluaran, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(labelPemasukan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Rp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Rp1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Rp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PemasukanDlmAngka, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(PengeluaranDlmAngka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabaDlmAngka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hijau_card_RKLayout.setVerticalGroup(
            hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hijau_card_RKLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rp)
                    .addComponent(labelPemasukan)
                    .addComponent(PemasukanDlmAngka))
                .addGap(11, 11, 11)
                .addGroup(hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPengeluaran)
                    .addComponent(Rp1)
                    .addComponent(PengeluaranDlmAngka))
                .addGap(11, 11, 11)
                .addGroup(hijau_card_RKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLabaBersih)
                    .addComponent(Rp2)
                    .addComponent(LabaDlmAngka))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        kuning_card_RO.setBackground(new java.awt.Color(255, 153, 0));
        kuning_card_RO.setRoundTopLeft(60);
        kuning_card_RO.setRoundTopRight(60);

        label_RO.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        label_RO.setText("Ringkasan Operasional");

        javax.swing.GroupLayout kuning_card_ROLayout = new javax.swing.GroupLayout(kuning_card_RO);
        kuning_card_RO.setLayout(kuning_card_ROLayout);
        kuning_card_ROLayout.setHorizontalGroup(
            kuning_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kuning_card_ROLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(label_RO)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        kuning_card_ROLayout.setVerticalGroup(
            kuning_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kuning_card_ROLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(label_RO)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        hijau_card_RO.setBackground(new java.awt.Color(0, 119, 32));
        hijau_card_RO.setRoundBottomLeft(20);
        hijau_card_RO.setRoundBottomRight(20);

        titikdua.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        titikdua.setForeground(new java.awt.Color(255, 255, 255));
        titikdua.setText(":");

        titikdua1.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        titikdua1.setForeground(new java.awt.Color(255, 255, 255));
        titikdua1.setText(":");

        titikdua2.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        titikdua2.setForeground(new java.awt.Color(255, 255, 255));
        titikdua2.setText(":");

        labelJasa.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelJasa.setForeground(new java.awt.Color(255, 255, 255));
        labelJasa.setText("Jasa Dikerjakan");

        labelProduk.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelProduk.setForeground(new java.awt.Color(255, 255, 255));
        labelProduk.setText("Produk Terjual");

        labelTerlaris.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelTerlaris.setForeground(new java.awt.Color(255, 255, 255));
        labelTerlaris.setText("Jasa/Produk Terlaris");

        titikdua3.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        titikdua3.setForeground(new java.awt.Color(255, 255, 255));
        titikdua3.setText(":");

        labelTransaksi.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        labelTransaksi.setText("Transaksi Dilakukan");

        TransaksiDlmAngka.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        TransaksiDlmAngka.setForeground(new java.awt.Color(255, 255, 255));
        TransaksiDlmAngka.setText("20");

        JasaDlmAngka.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        JasaDlmAngka.setForeground(new java.awt.Color(255, 255, 255));
        JasaDlmAngka.setText("20");

        ProdukDlmAngka.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        ProdukDlmAngka.setForeground(new java.awt.Color(255, 255, 255));
        ProdukDlmAngka.setText("14");

        txtTerlaris.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        txtTerlaris.setForeground(new java.awt.Color(255, 255, 255));
        txtTerlaris.setText("Hair Cut");

        numTerlaris.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        numTerlaris.setForeground(new java.awt.Color(255, 255, 255));
        numTerlaris.setText("(413x)");

        javax.swing.GroupLayout hijau_card_ROLayout = new javax.swing.GroupLayout(hijau_card_RO);
        hijau_card_RO.setLayout(hijau_card_ROLayout);
        hijau_card_ROLayout.setHorizontalGroup(
            hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hijau_card_ROLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(labelJasa, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                        .addComponent(labelProduk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelTerlaris))
                .addGap(30, 30, 30)
                .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(titikdua3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titikdua1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titikdua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titikdua2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(hijau_card_ROLayout.createSequentialGroup()
                        .addComponent(txtTerlaris)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numTerlaris, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TransaksiDlmAngka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JasaDlmAngka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProdukDlmAngka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        hijau_card_ROLayout.setVerticalGroup(
            hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hijau_card_ROLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titikdua)
                    .addComponent(labelTransaksi)
                    .addComponent(TransaksiDlmAngka))
                .addGap(11, 11, 11)
                .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titikdua1)
                    .addComponent(labelJasa)
                    .addComponent(JasaDlmAngka))
                .addGap(11, 11, 11)
                .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProduk)
                    .addComponent(titikdua3)
                    .addComponent(ProdukDlmAngka))
                .addGap(11, 11, 11)
                .addGroup(hijau_card_ROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerlaris)
                    .addComponent(titikdua2)
                    .addComponent(txtTerlaris)
                    .addComponent(numTerlaris))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        kuning_card_RK1.setBackground(new java.awt.Color(255, 153, 0));
        kuning_card_RK1.setRoundBottomLeft(40);
        kuning_card_RK1.setRoundBottomRight(40);
        kuning_card_RK1.setRoundTopLeft(40);
        kuning_card_RK1.setRoundTopRight(40);

        labelRiwayatTransaksi.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        labelRiwayatTransaksi.setText("Keuangan Mingguan");

        javax.swing.GroupLayout kuning_card_RK1Layout = new javax.swing.GroupLayout(kuning_card_RK1);
        kuning_card_RK1.setLayout(kuning_card_RK1Layout);
        kuning_card_RK1Layout.setHorizontalGroup(
            kuning_card_RK1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kuning_card_RK1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(labelRiwayatTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        kuning_card_RK1Layout.setVerticalGroup(
            kuning_card_RK1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kuning_card_RK1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(labelRiwayatTransaksi)
                .addGap(12, 12, 12))
        );

        shapecustom2.setBackground(new java.awt.Color(255, 153, 0));
        shapecustom2.setRoundBottomLeft(20);
        shapecustom2.setRoundBottomRight(20);
        shapecustom2.setRoundTopLeft(20);
        shapecustom2.setRoundTopRight(20);

        jComboBox1.setBackground(new java.awt.Color(255, 153, 0));
        jComboBox1.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Pilih Bulan--", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shapecustom2Layout = new javax.swing.GroupLayout(shapecustom2);
        shapecustom2.setLayout(shapecustom2Layout);
        shapecustom2Layout.setHorizontalGroup(
            shapecustom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shapecustom2Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        shapecustom2Layout.setVerticalGroup(
            shapecustom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTaabel1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MINGGU KE-", "PEMASUKAN", "PENGELUARAN", "LABA", "AKSI"
            }
        ));
        jScrollPane1.setViewportView(jTaabel1);

        javax.swing.GroupLayout whiteBgLayout = new javax.swing.GroupLayout(whiteBg);
        whiteBg.setLayout(whiteBgLayout);
        whiteBgLayout.setHorizontalGroup(
            whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(whiteBgLayout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, whiteBgLayout.createSequentialGroup()
                        .addGroup(whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(kuning_card_RK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hijau_card_RK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(kuning_card_RK1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addGroup(whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(shapecustom2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hijau_card_RO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kuning_card_RO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        whiteBgLayout.setVerticalGroup(
            whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(whiteBgLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kuning_card_RO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kuning_card_RK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hijau_card_RO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hijau_card_RK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(whiteBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kuning_card_RK1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(shapecustom2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(whiteBg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(whiteBg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JasaDlmAngka;
    private javax.swing.JLabel LabaDlmAngka;
    private javax.swing.JLabel PemasukanDlmAngka;
    private javax.swing.JLabel PengeluaranDlmAngka;
    private javax.swing.JLabel ProdukDlmAngka;
    private javax.swing.JLabel Rp;
    private javax.swing.JLabel Rp1;
    private javax.swing.JLabel Rp2;
    private javax.swing.JLabel TransaksiDlmAngka;
    private com.ananta.shape.shapecustom hijau_card_RK;
    private com.ananta.shape.shapecustom hijau_card_RO;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.ananta.shape.JTabeel jTaabel1;
    private com.ananta.shape.shapecustom kuning_card_RK;
    private com.ananta.shape.shapecustom kuning_card_RK1;
    private com.ananta.shape.shapecustom kuning_card_RO;
    private javax.swing.JLabel labelJasa;
    private javax.swing.JLabel labelLabaBersih;
    private javax.swing.JLabel labelPemasukan;
    private javax.swing.JLabel labelPengeluaran;
    private javax.swing.JLabel labelProduk;
    private javax.swing.JLabel labelRiwayatTransaksi;
    private javax.swing.JLabel labelTerlaris;
    private javax.swing.JLabel labelTransaksi;
    private javax.swing.JLabel label_RK;
    private javax.swing.JLabel label_RO;
    private javax.swing.JLabel numTerlaris;
    private com.ananta.shape.shapecustom shapecustom2;
    private javax.swing.JLabel titikdua;
    private javax.swing.JLabel titikdua1;
    private javax.swing.JLabel titikdua2;
    private javax.swing.JLabel titikdua3;
    private javax.swing.JLabel txtTerlaris;
    private com.ananta.shape.shapecustom whiteBg;
    // End of variables declaration//GEN-END:variables

    private int totalPemasukan() {
        int totalPemasukan = 0;
        try {
            String sql = """
                        SELECT IFNULL(SUM(total_harga), 0) AS pemasukan
                        FROM transaksi
                        WHERE MONTH(created_at) = MONTH(CURDATE()) 
                        AND YEAR(created_at) = YEAR(CURDATE());
                         """;
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            if (rs.next()){
                totalPemasukan = rs.getInt("pemasukan");
            }

        }catch (Exception e) {
            e.printStackTrace();
        }
        return totalPemasukan;
    }

    private int totalPengeluaran() {
        int totalPengeluaran = 0;
        try {
            String sql = """
                        SELECT IFNULL(SUM(jumlah), 0) AS pengeluaran
                        FROM pengeluaran
                        WHERE MONTH(created_at) = MONTH(CURDATE()) 
                        AND YEAR(created_at) = YEAR(CURDATE());
                        """;
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            if (rs.next()){
                totalPengeluaran = rs.getInt("pengeluaran");
            }

        }catch (Exception e) {
            e.printStackTrace();
        }
        return totalPengeluaran;
    }

    private int totalLaba() {
        int totalLaba = 0;
        try {
            String sql = """
                        SELECT
                            IFNULL((
                                SELECT SUM(total_harga)
                                FROM transaksi
                                WHERE MONTH(created_at) = MONTH(CURDATE()) 
                                AND YEAR(created_at) = YEAR(CURDATE())
                            ), 0)
                            -
                            IFNULL((
                                SELECT SUM(jumlah)
                                FROM pengeluaran
                                WHERE MONTH(created_at) = MONTH(CURDATE()) 
                                AND YEAR(created_at) = YEAR(CURDATE())
                            ), 0) AS laba;
                        """;
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            if (rs.next()) {
                totalLaba = rs.getInt("laba");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return totalLaba;
    }

    private int jmlTransaksi() {
        int jmlTransaksi = 0;
        try {
            String sql = """
                        SELECT COUNT(*) AS jumlah_transaksi
                        FROM transaksi
                        WHERE MONTH(created_at) = MONTH(CURDATE()) 
                        AND YEAR(created_at) = YEAR(CURDATE());
                        """;
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            if (rs.next()) {
                jmlTransaksi = rs.getInt("jumlah_transaksi");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return jmlTransaksi;
    }

    private int jmlJasaDikerjakan() {
        int jmlJasa = 0;
        try {
            String sql = """
                        SELECT COUNT(*) AS jumlah_jasa_dikerjakan
                        FROM transaksi_jasa tj
                        JOIN transaksi t ON tj.id_transaksi = t.id_transaksi
                        WHERE MONTH(t.created_at) = MONTH(CURDATE()) 
                        AND YEAR(t.created_at) = YEAR(CURDATE());
                        """;
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            if (rs.next()) {
                jmlJasa = rs.getInt("jumlah_jasa_dikerjakan");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return jmlJasa;
    }

    private int jmlProdukTerjual() {
        int jmlProduk = 0;
        try {
            String sql = """
                        SELECT COUNT(*) AS jumlah_produk
                        FROM transaksi_barang tb
                        JOIN transaksi t ON tb.id_transaksi = t.id_transaksi
                        WHERE MONTH(t.created_at) = MONTH(CURDATE()) 
                        AND YEAR(t.created_at) = YEAR(CURDATE());
                        """;
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            if (rs.next()) {
                jmlProduk = rs.getInt("jumlah_produk");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return jmlProduk;
    }

    private void getTerlaris() {
        String namaTerlaris = "-";
        int jumlahTerlaris = 0;

        try {
            String sqlJasa = """
                            SELECT j.nama_jasa AS nama, COUNT(*) AS jumlah
                            FROM transaksi_jasa tj
                            JOIN transaksi t ON tj.id_transaksi = t.id_transaksi
                            JOIN jasa j ON tj.id_jasa = j.id_jasa
                            WHERE MONTH(t.created_at) = MONTH(CURDATE()) 
                            AND YEAR(t.created_at) = YEAR(CURDATE())
                            GROUP BY j.nama_jasa
                            ORDER BY jumlah DESC
                            LIMIT 1;
                            """;
            PreparedStatement stJasa = conn.prepareStatement(sqlJasa);
            ResultSet rsJasa = stJasa.executeQuery();

            String namaJasa = null;
            int jumlahJasa = 0;

            if (rsJasa.next()) {
                namaJasa = rsJasa.getString("nama");
                jumlahJasa = rsJasa.getInt("jumlah");
            }

            String sqlProduk = """
                            SELECT b.nama_barang AS nama, COUNT(*) AS jumlah
                            FROM transaksi_barang tb
                            JOIN transaksi t ON tb.id_transaksi = t.id_transaksi
                            JOIN barang b ON tb.id_barang = b.id_barang
                            WHERE MONTH(t.created_at) = MONTH(CURDATE()) 
                            AND YEAR(t.created_at) = YEAR(CURDATE())
                            GROUP BY b.nama_barang
                            ORDER BY jumlah DESC
                            LIMIT 1;
                            """;
            PreparedStatement stProduk = conn.prepareStatement(sqlProduk);
            ResultSet rsProduk = stProduk.executeQuery();

            String namaProduk = null;
            int jumlahProduk = 0;

            if (rsProduk.next()) {
                namaProduk = rsProduk.getString("nama");
                jumlahProduk = rsProduk.getInt("jumlah");
            }

            if (jumlahJasa >= jumlahProduk) {
                namaTerlaris = namaJasa != null ? namaJasa : "-";
                jumlahTerlaris = jumlahJasa;
            } else {
                namaTerlaris = namaProduk != null ? namaProduk : "-";
                jumlahTerlaris = jumlahProduk;
            }

        } catch (Exception e) {
            e.printStackTrace();
            }

        txtTerlaris.setText(namaTerlaris);
        numTerlaris.setText("(" + jumlahTerlaris + "x)");
    }

    private void loadData() {
    NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));
        
        PemasukanDlmAngka.setText(formatRupiah.format(totalPemasukan()));
        PengeluaranDlmAngka.setText(formatRupiah.format(totalPengeluaran()));
        LabaDlmAngka.setText(formatRupiah.format(totalLaba()));
        TransaksiDlmAngka.setText(String.valueOf(jmlTransaksi()));
        JasaDlmAngka.setText(String.valueOf(jmlJasaDikerjakan()));
        ProdukDlmAngka.setText(String.valueOf(jmlProdukTerjual()));
        getTerlaris();
    }
}
